{
  "address": "0x5A51FB4BbcbbB3977960d9d4F5d70650883f82c4",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isProrated",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "autoConvertWhenRepay",
              "type": "bool"
            },
            {
              "internalType": "enum BespokeTypes.OfferType",
              "name": "offerType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMax",
              "type": "uint256"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMin",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMax",
              "type": "uint40"
            },
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "lendAsset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonceMaxTimes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BespokeTypes.Offer",
          "name": "offerData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct BespokeTypes.TakeLendInfoForStrategy",
          "name": "takeInfo",
          "type": "tuple"
        }
      ],
      "name": "validate",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd0963daa6069f2f8886bf1e8ec973066ac72e41edaa1cbc73583dc9ec0affc97",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0x5A51FB4BbcbbB3977960d9d4F5d70650883f82c4",
    "transactionIndex": 2,
    "gasUsed": "278543",
    "logsBloom": "0x
    "blockHash": "0xa1e43ea14b271e7445a0e9c0b775a55a0427021ab85a8c9b3b00143ab217c061",
    "transactionHash": "0xd0963daa6069f2f8886bf1e8ec973066ac72e41edaa1cbc73583dc9ec0affc97",
    "logs": [],
    "blockNumber": 2569345,
    "cumulativeGasUsed": "346476",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "88f70ef30a97ad95dcfad3d4587a7e7c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isProrated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoConvertWhenRepay\",\"type\":\"bool\"},{\"internalType\":\"enum BespokeTypes.OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMax\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMin\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMax\",\"type\":\"uint40\"},{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonceMaxTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct BespokeTypes.Offer\",\"name\":\"offerData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct BespokeTypes.TakeLendInfoForStrategy\",\"name\":\"takeInfo\",\"type\":\"tuple\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bespokemarket/offerStrategies/StrategyAnyInCollection.sol\":\"StrategyAnyInCollection\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bespokemarket/libraries/BespokeTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary BespokeTypes {\\n    struct Offer {\\n        bool isProrated; // whether to pay interest a fixed-time when repay early\\n        bool autoConvertWhenRepay; // when currency!=lendAsset, whether to convert currency to lendAsset for lender when repay. Determined by lender.\\n        OfferType offerType;\\n        address tokenAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address signer; //borrower or lender\\n        uint256 borrowAmountMin;\\n        uint256 borrowAmountMax;\\n        uint40 borrowDurationMin;\\n        uint40 borrowDurationMax;\\n        uint128 borrowRate;\\n        address currency;  // Asset to borrow or receive when loan created. Borrower should also use it for repay.\\n        address lendAsset; // Using which token to lend. Determined by lender and should be zero address for borrow offer.\\n        uint256 nonce;\\n        uint256 nonceMaxTimes;// should be 1 for a borrow offer\\n        uint256 deadline;\\n        address strategy; // used for lend offer. should be zero address for borrow offer\\n        bytes params;\\n        uint8 v; // v: parameter (27 or 28)\\n        bytes32 r; // r: parameter\\n        bytes32 s; // s: parameter\\n    }\\n\\n    struct LoanData {\\n        address tokenAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address nftManager;\\n        address borrower;\\n        address lender;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        address currency;\\n        address lendAsset;\\n        uint256 reserveFactor;\\n        uint256 overdueLoanFeeFactor;\\n        uint40 borrowDuration;\\n        uint40 borrowBegin;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        bool isProrated;\\n        bool autoConvertWhenRepay;\\n        LoanStatus status;\\n    }\\n\\n    enum OfferType {\\n        BORROW, // borrow offer\\n        LEND // lend offer\\n    }\\n\\n    struct TakeBorrowInfo {\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n        address lendAsset;\\n        bool autoConvertWhenRepay;\\n    }\\n\\n    struct TakeLendInfo {\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n        uint256 tokenId;\\n        address onBehalfOf;\\n        bytes params;\\n    }\\n\\n    // params for lend strategy\\n    struct TakeLendInfoForStrategy {\\n        address taker;\\n        uint256 tokenId;\\n        bytes params;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        OVERDUE,\\n        LIQUIDATABLE\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 overdueDuration;\\n    }\\n\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    struct NonceInfo {\\n        bool invalid;\\n        uint256 usedTimes;\\n        bytes32 offerHash;\\n    }\\n}\\n\",\"keccak256\":\"0xc1c1fdc3ed498c4e500329e331e52c682d8b8f99cbc96337644ff3723de7191f\",\"license\":\"MIT\"},\"contracts/bespokemarket/offerStrategies/StrategyAnyInCollection.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport '../libraries/BespokeTypes.sol';\\n\\ncontract StrategyAnyInCollection {\\n    function validate(BespokeTypes.Offer memory offerData, BespokeTypes.TakeLendInfoForStrategy memory takeInfo)\\n        external\\n        view\\n    {\\n        // Do nothing\\n    }\\n}\\n\",\"keccak256\":\"0x23b8968659713c5bd39277c868bbf0dc47e08a848beb83dd2967f1a50888e07a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610414806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063169b8d6714610030575b600080fd5b61004261003e366004610212565b5050565b005b634e487b7160e01b600052604160045260246000fd5b6040516102c0810167ffffffffffffffff8111828210171561007e5761007e610044565b60405290565b8035801515811461009457600080fd5b919050565b80356002811061009457600080fd5b80356001600160a01b038116811461009457600080fd5b803564ffffffffff8116811461009457600080fd5b80356fffffffffffffffffffffffffffffffff8116811461009457600080fd5b600082601f83011261010557600080fd5b813567ffffffffffffffff8082111561012057610120610044565b604051601f8301601f19908116603f0116810190828211818310171561014857610148610044565b8160405283815286602085880101111561016157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461009457600080fd5b6000606082840312156101a457600080fd5b6040516060810167ffffffffffffffff82821081831117156101c8576101c8610044565b816040528293506101d8856100a8565b83526020850135602084015260408501359150808211156101f857600080fd5b50610205858286016100f4565b6040830152505092915050565b6000806040838503121561022557600080fd5b823567ffffffffffffffff8082111561023d57600080fd5b908401906102c0828703121561025257600080fd5b61025a61005a565b61026383610084565b815261027160208401610084565b602082015261028260408401610099565b6040820152610293606084016100a8565b60608201526080830135608082015260a083013560a08201526102b860c084016100a8565b60c082015260e083013560e08201526101008084013581830152506101206102e18185016100bf565b908201526101406102f38482016100bf565b908201526101606103058482016100d4565b908201526101806103178482016100a8565b908201526101a06103298482016100a8565b908201526101c083810135908201526101e08084013590820152610200808401359082015261022061035c8185016100a8565b90820152610240838101358381111561037457600080fd5b610380898287016100f4565b828401525050610260610394818501610181565b9082015261028083810135908201526102a09283013592810192909252909250602084013590808211156103c757600080fd5b506103d485828601610192565b915050925092905056fea26469706673582212207780ca5c38f6db6180b5189c02b59c973bceb514446832280b51588a87ef574b64736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063169b8d6714610030575b600080fd5b61004261003e366004610212565b5050565b005b634e487b7160e01b600052604160045260246000fd5b6040516102c0810167ffffffffffffffff8111828210171561007e5761007e610044565b60405290565b8035801515811461009457600080fd5b919050565b80356002811061009457600080fd5b80356001600160a01b038116811461009457600080fd5b803564ffffffffff8116811461009457600080fd5b80356fffffffffffffffffffffffffffffffff8116811461009457600080fd5b600082601f83011261010557600080fd5b813567ffffffffffffffff8082111561012057610120610044565b604051601f8301601f19908116603f0116810190828211818310171561014857610148610044565b8160405283815286602085880101111561016157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461009457600080fd5b6000606082840312156101a457600080fd5b6040516060810167ffffffffffffffff82821081831117156101c8576101c8610044565b816040528293506101d8856100a8565b83526020850135602084015260408501359150808211156101f857600080fd5b50610205858286016100f4565b6040830152505092915050565b6000806040838503121561022557600080fd5b823567ffffffffffffffff8082111561023d57600080fd5b908401906102c0828703121561025257600080fd5b61025a61005a565b61026383610084565b815261027160208401610084565b602082015261028260408401610099565b6040820152610293606084016100a8565b60608201526080830135608082015260a083013560a08201526102b860c084016100a8565b60c082015260e083013560e08201526101008084013581830152506101206102e18185016100bf565b908201526101406102f38482016100bf565b908201526101606103058482016100d4565b908201526101806103178482016100a8565b908201526101a06103298482016100a8565b908201526101c083810135908201526101e08084013590820152610200808401359082015261022061035c8185016100a8565b90820152610240838101358381111561037457600080fd5b610380898287016100f4565b828401525050610260610394818501610181565b9082015261028083810135908201526102a09283013592810192909252909250602084013590808211156103c757600080fd5b506103d485828601610192565b915050925092905056fea26469706673582212207780ca5c38f6db6180b5189c02b59c973bceb514446832280b51588a87ef574b64736f6c634300080a0033",
  "libraries": {
    "BespokeTypes": "0x473482d4940F9075B8E3C42ccE22B71eA74D0d2A"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}