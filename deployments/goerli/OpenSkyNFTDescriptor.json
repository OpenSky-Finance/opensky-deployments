{
  "address": "0xD5d7c35de94A1CC9f901EbECB551764CE922Bbd3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_aclManager",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ACLManager",
      "outputs": [
        {
          "internalType": "contract IACLManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x73c0bfb03ca07de0990945266625e3085cfaa83a625446a5b9517eb5201a5166",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0xD5d7c35de94A1CC9f901EbECB551764CE922Bbd3",
    "transactionIndex": 87,
    "gasUsed": "476987",
    "logsBloom": "0x
    "blockHash": "0x1398ca0d417d2ee05a598c685b2d2daea213e1e24de4a054b176093bb2a6dbcb",
    "transactionHash": "0x73c0bfb03ca07de0990945266625e3085cfaa83a625446a5b9517eb5201a5166",
    "logs": [],
    "blockNumber": 8450418,
    "cumulativeGasUsed": "18881977",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9F0c2a07AF6Fb2dD9f84695d495A276f99730574"
  ],
  "solcInputHash": "fb7563f4396d12f697ca82f48d6dbe26",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aclManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ACLManager\",\"outputs\":[{\"internalType\":\"contract IACLManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/OpenSkyNFTDescriptor.sol\":\"OpenSkyNFTDescriptor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"contracts/interfaces/IACLManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IACLManager {\\n    function addEmergencyAdmin(address admin) external;\\n    \\n    function isEmergencyAdmin(address admin) external view returns (bool);\\n    \\n    function removeEmergencyAdmin(address admin) external;\\n    \\n    function addGovernance(address admin) external;\\n    \\n    function isGovernance(address admin) external view returns (bool);\\n\\n    function removeGovernance(address admin) external;\\n\\n    function addPoolAdmin(address admin) external;\\n\\n    function isPoolAdmin(address admin) external view returns (bool);\\n\\n    function removePoolAdmin(address admin) external;\\n\\n    function addLiquidationOperator(address address_) external;\\n\\n    function isLiquidationOperator(address address_) external view returns (bool);\\n\\n    function removeLiquidationOperator(address address_) external;\\n\\n    function addAirdropOperator(address address_) external;\\n\\n    function isAirdropOperator(address address_) external view returns (bool);\\n\\n    function removeAirdropOperator(address address_) external;\\n}\\n\",\"keccak256\":\"0x0e77d3bdc88ba10cd78a9a80350bbf0d4120a1d0ac7c7911bef8c8cb389cf42f\",\"license\":\"MIT\"},\"contracts/interfaces/IOpenSkyNFTDescriptor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IOpenSkyNFTDescriptor {\\n    function tokenURI(uint256 reserveId)\\n        external\\n        view\\n        returns (string memory);\\n}\\n\",\"keccak256\":\"0x1fb58d86a90c029c42c8a58bf2bff4f3457d761544959facb174b5fe03c599cc\",\"license\":\"MIT\"},\"contracts/misc/OpenSkyNFTDescriptor.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"../interfaces/IOpenSkyNFTDescriptor.sol\\\";\\nimport \\\"../interfaces/IACLManager.sol\\\";\\n\\ncontract OpenSkyNFTDescriptor is IOpenSkyNFTDescriptor {\\n    using Strings for uint256;\\n\\n    IACLManager public immutable ACLManager;\\n    string public baseURI;\\n\\n    modifier onlyGovernance() {\\n        require(ACLManager.isGovernance(msg.sender), \\\"ACL_ONLY_GOVERNANCE_CAN_CALL\\\");\\n        _;\\n    }\\n\\n    constructor(address _aclManager) {\\n        ACLManager = IACLManager(_aclManager);\\n    }\\n\\n    function setBaseURI(string memory _baseURI) external onlyGovernance {\\n        baseURI = _baseURI;\\n    }\\n\\n    function tokenURI(uint256 tokenId) external override view returns (string memory) {\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n}\",\"keccak256\":\"0x17d56260bf13d0caaa0d2011e59838cdc199e7152a3448d349eb8d21d028697f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161083438038061083483398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107a4610090600039600081816089015260eb01526107a46000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806355f804b3146100515780636c0360eb14610066578063b0a9d7fd14610084578063c87b56dd146100c3575b600080fd5b61006461005f366004610466565b6100d6565b005b61006e6101c5565b60405161007b9190610547565b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b61006e6100d136600461057a565b610253565b6040516337b87c3960e21b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dee1f0e490602401602060405180830381865afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610593565b6101ae5760405162461bcd60e51b815260206004820152601c60248201527f41434c5f4f4e4c595f474f5645524e414e43455f43414e5f43414c4c00000000604482015260640160405180910390fd5b80516101c19060009060208401906103b7565b5050565b600080546101d2906105bc565b80601f01602080910402602001604051908101604052809291908181526020018280546101fe906105bc565b801561024b5780601f106102205761010080835404028352916020019161024b565b820191906000526020600020905b81548152906001019060200180831161022e57829003601f168201915b505050505081565b60606000808054610263906105bc565b90501161027f57604051806020016040528060008152506102ab565b600061028a836102b1565b60405160200161029b929190610613565b6040516020818303038152906040525b92915050565b6060816102d55750506040805180820190915260018152600360fc1b602082015290565b8160005b81156102ff57806102e9816106d0565b91506102f89050600a83610701565b91506102d9565b60008167ffffffffffffffff81111561031a5761031a610450565b6040519080825280601f01601f191660200182016040528015610344576020820181803683370190505b5090505b84156103af57610359600183610715565b9150610366600a8661072c565b610371906030610740565b60f81b81838151811061038657610386610758565b60200101906001600160f81b031916908160001a9053506103a8600a86610701565b9450610348565b949350505050565b8280546103c3906105bc565b90600052602060002090601f0160209004810192826103e5576000855561042b565b82601f106103fe57805160ff191683800117855561042b565b8280016001018555821561042b579182015b8281111561042b578251825591602001919060010190610410565b5061043792915061043b565b5090565b5b80821115610437576000815560010161043c565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561047857600080fd5b813567ffffffffffffffff8082111561049057600080fd5b818401915084601f8301126104a457600080fd5b8135818111156104b6576104b6610450565b604051601f8201601f19908116603f011681019083821181831017156104de576104de610450565b816040528281528760208487010111156104f757600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561053257818101518382015260200161051a565b83811115610541576000848401525b50505050565b6020815260008251806020840152610566816040850160208701610517565b601f01601f19169190910160400192915050565b60006020828403121561058c57600080fd5b5035919050565b6000602082840312156105a557600080fd5b815180151581146105b557600080fd5b9392505050565b600181811c908216806105d057607f821691505b602082108114156105f157634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610609818560208601610517565b9290920192915050565b600080845481600182811c91508083168061062f57607f831692505b602080841082141561064f57634e487b7160e01b86526022600452602486fd5b8180156106635760018114610674576106a1565b60ff198616895284890196506106a1565b60008b81526020902060005b868110156106995781548b820152908501908301610680565b505084890196505b5050505050506106b181856105f7565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156106e4576106e46106ba565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610710576107106106eb565b500490565b600082821015610727576107276106ba565b500390565b60008261073b5761073b6106eb565b500690565b60008219821115610753576107536106ba565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d8f9104d82561ce592b9b2ff78fca6b52be57b928b6655ac3d8eba5c260665c264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806355f804b3146100515780636c0360eb14610066578063b0a9d7fd14610084578063c87b56dd146100c3575b600080fd5b61006461005f366004610466565b6100d6565b005b61006e6101c5565b60405161007b9190610547565b60405180910390f35b6100ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007b565b61006e6100d136600461057a565b610253565b6040516337b87c3960e21b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063dee1f0e490602401602060405180830381865afa15801561013a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061015e9190610593565b6101ae5760405162461bcd60e51b815260206004820152601c60248201527f41434c5f4f4e4c595f474f5645524e414e43455f43414e5f43414c4c00000000604482015260640160405180910390fd5b80516101c19060009060208401906103b7565b5050565b600080546101d2906105bc565b80601f01602080910402602001604051908101604052809291908181526020018280546101fe906105bc565b801561024b5780601f106102205761010080835404028352916020019161024b565b820191906000526020600020905b81548152906001019060200180831161022e57829003601f168201915b505050505081565b60606000808054610263906105bc565b90501161027f57604051806020016040528060008152506102ab565b600061028a836102b1565b60405160200161029b929190610613565b6040516020818303038152906040525b92915050565b6060816102d55750506040805180820190915260018152600360fc1b602082015290565b8160005b81156102ff57806102e9816106d0565b91506102f89050600a83610701565b91506102d9565b60008167ffffffffffffffff81111561031a5761031a610450565b6040519080825280601f01601f191660200182016040528015610344576020820181803683370190505b5090505b84156103af57610359600183610715565b9150610366600a8661072c565b610371906030610740565b60f81b81838151811061038657610386610758565b60200101906001600160f81b031916908160001a9053506103a8600a86610701565b9450610348565b949350505050565b8280546103c3906105bc565b90600052602060002090601f0160209004810192826103e5576000855561042b565b82601f106103fe57805160ff191683800117855561042b565b8280016001018555821561042b579182015b8281111561042b578251825591602001919060010190610410565b5061043792915061043b565b5090565b5b80821115610437576000815560010161043c565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561047857600080fd5b813567ffffffffffffffff8082111561049057600080fd5b818401915084601f8301126104a457600080fd5b8135818111156104b6576104b6610450565b604051601f8201601f19908116603f011681019083821181831017156104de576104de610450565b816040528281528760208487010111156104f757600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561053257818101518382015260200161051a565b83811115610541576000848401525b50505050565b6020815260008251806020840152610566816040850160208701610517565b601f01601f19169190910160400192915050565b60006020828403121561058c57600080fd5b5035919050565b6000602082840312156105a557600080fd5b815180151581146105b557600080fd5b9392505050565b600181811c908216806105d057607f821691505b602082108114156105f157634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610609818560208601610517565b9290920192915050565b600080845481600182811c91508083168061062f57607f831692505b602080841082141561064f57634e487b7160e01b86526022600452602486fd5b8180156106635760018114610674576106a1565b60ff198616895284890196506106a1565b60008b81526020902060005b868110156106995781548b820152908501908301610680565b505084890196505b5050505050506106b181856105f7565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156106e4576106e46106ba565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082610710576107106106eb565b500490565b600082821015610727576107276106ba565b500390565b60008261073b5761073b6106eb565b500690565b60008219821115610753576107536106ba565b500190565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d8f9104d82561ce592b9b2ff78fca6b52be57b928b6655ac3d8eba5c260665c264736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26564,
        "contract": "contracts/misc/OpenSkyNFTDescriptor.sol:OpenSkyNFTDescriptor",
        "label": "baseURI",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}