{
  "address": "0x51f58C8b55844Ba08e066c12B1aacf5b57bdA426",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IOpenSkyBespokeMarket",
          "name": "MARKET_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MARKET",
      "outputs": [
        {
          "internalType": "contract IOpenSkyBespokeMarket",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanId",
          "type": "uint256"
        }
      ],
      "name": "getLoanData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserveId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "interestPerSecond",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint40",
              "name": "borrowDuration",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "borrowBegin",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "borrowOverdueTime",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "liquidatableTime",
              "type": "uint40"
            },
            {
              "internalType": "address",
              "name": "lender",
              "type": "address"
            },
            {
              "internalType": "enum BespokeTypes.LoanStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "loanId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "penalty",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowInterest",
              "type": "uint256"
            }
          ],
          "internalType": "struct IOpenSkyBespokeDataProvider.LoanDataUI",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xcd0c1d6a6c105aef39b9b55b433d35f327abd173e19aa0e0ea694544ba92651e",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0x51f58C8b55844Ba08e066c12B1aacf5b57bdA426",
    "transactionIndex": 64,
    "gasUsed": "512803",
    "logsBloom": "0x
    "blockHash": "0x8ec8532294bb8f948627d8c7246e131df7ef88a60a6ffc0b35b69de37ca9e09f",
    "transactionHash": "0xcd0c1d6a6c105aef39b9b55b433d35f327abd173e19aa0e0ea694544ba92651e",
    "logs": [],
    "blockNumber": 7985302,
    "cumulativeGasUsed": "5757450",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa4de8a83Ed79754B96b13233A220E337C86160d3"
  ],
  "solcInputHash": "52db335744ccba4923b671cf9bf608b9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IOpenSkyBespokeMarket\",\"name\":\"MARKET_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MARKET\",\"outputs\":[{\"internalType\":\"contract IOpenSkyBespokeMarket\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"}],\"name\":\"getLoanData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserveId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"interestPerSecond\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint40\",\"name\":\"borrowDuration\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"borrowBegin\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"borrowOverdueTime\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"liquidatableTime\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"enum BespokeTypes.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"loanId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowInterest\",\"type\":\"uint256\"}],\"internalType\":\"struct IOpenSkyBespokeDataProvider.LoanDataUI\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bespokemarket/OpenSkyBespokeDataProvider.sol\":\"OpenSkyBespokeDataProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bespokemarket/OpenSkyBespokeDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport './interfaces/IOpenSkyBespokeMarket.sol';\\nimport './interfaces/IOpenSkyBespokeDataProvider.sol';\\nimport './libraries/BespokeTypes.sol';\\n\\n/*\\n *  a helper contract to aggregate data for front-end\\n */\\ncontract OpenSkyBespokeDataProvider is  IOpenSkyBespokeDataProvider{\\n    IOpenSkyBespokeMarket public immutable MARKET;\\n\\n    constructor(IOpenSkyBespokeMarket MARKET_) {\\n        MARKET = MARKET_;\\n    }\\n\\n    function getLoanData(uint256 loanId) external view override returns (LoanDataUI memory) {\\n        BespokeTypes.LoanData memory loan = MARKET.getLoanData(loanId);\\n        \\n        return\\n            LoanDataUI({\\n                reserveId: loan.reserveId,\\n                nftAddress: loan.nftAddress,\\n                tokenId: loan.tokenId,\\n                tokenAmount: loan.tokenAmount,\\n                borrower: loan.borrower,\\n                amount:loan.amount,\\n                borrowRate: loan.borrowRate,\\n                interestPerSecond: loan.interestPerSecond,\\n                currency: loan.currency,\\n                borrowDuration: loan.borrowDuration,\\n                borrowBegin: loan.borrowBegin,\\n                borrowOverdueTime: loan.borrowOverdueTime,\\n                liquidatableTime: loan.liquidatableTime,\\n                lender: loan.lender,\\n                status: loan.status,\\n                // extra\\n                loanId: loanId,\\n                borrowBalance: MARKET.getBorrowBalance(loanId),\\n                penalty: MARKET.getPenalty(loanId),\\n                borrowInterest:MARKET.getBorrowInterest(loanId)\\n            });\\n    }\\n}\\n\",\"keccak256\":\"0xd1c54b492fd013624f58d69a813a4b3a0a86d94516fe115de7b8fe291ac38c2b\",\"license\":\"MIT\"},\"contracts/bespokemarket/interfaces/IOpenSkyBespokeDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport './IOpenSkyBespokeMarket.sol';\\nimport '../libraries/BespokeTypes.sol';\\n\\ninterface IOpenSkyBespokeDataProvider {\\n    struct LoanDataUI {\\n        // same as  BespokeTypes.LoanData\\n        uint256 reserveId;\\n        address nftAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount;\\n        address borrower;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        address currency;\\n        uint40 borrowDuration;\\n        uint40 borrowBegin;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        address lender;\\n        BespokeTypes.LoanStatus status;\\n        // extra fields\\n        uint256 loanId;\\n        uint256 borrowBalance;\\n        uint256 penalty;\\n        uint256 borrowInterest;\\n    }\\n\\n    function getLoanData(uint256 loanId) external view returns (LoanDataUI memory);\\n}\\n\",\"keccak256\":\"0x3d2e5ce8711a14b1cf7d2a2ebcee2f5ef35533138cc70f146896d24705bd1399\",\"license\":\"MIT\"},\"contracts/bespokemarket/interfaces/IOpenSkyBespokeMarket.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport '../libraries/BespokeTypes.sol';\\n\\ninterface IOpenSkyBespokeMarket {\\n    event CancelAllOffers(address indexed sender, uint256 nonce);\\n\\n    event CancelMultipleOffers(address indexed sender, uint256[] nonces);\\n\\n    event TakeBorrowOffer(\\n        bytes32 offerHash,\\n        uint256 indexed loanId,\\n        address indexed lender,\\n        address indexed borrower,\\n        uint256 nonce\\n    );\\n\\n    event TakeBorrowOfferETH(\\n        bytes32 offerHash,\\n        uint256 indexed loanId,\\n        address indexed lender,\\n        address indexed borrower,\\n        uint256 nonce\\n    );\\n\\n    event TakeLendOffer(\\n        bytes32 offerHash,\\n        uint256 indexed loanId,\\n        address indexed lender,\\n        address indexed borrower,\\n        uint256 nonce\\n    );\\n\\n    event Repay(uint256 indexed loanId, address indexed borrower);\\n\\n    event RepayETH(uint256 indexed loanId, address indexed borrower);\\n\\n    event Rollover(\\n        bytes32 offerHash,\\n        uint256 oldLoanId,\\n        uint256 indexed loanId,\\n        address indexed lender,\\n        address indexed borrower,\\n        uint256 nonce\\n    );\\n\\n    event Foreclose(uint256 indexed loanId, address indexed lender);\\n\\n    event FlashClaim(address indexed receiver, address sender, address indexed nftAddress, uint256 indexed tokenId);\\n    event ClaimERC20Airdrop(address indexed token, address indexed to, uint256 amount);\\n    event ClaimERC721Airdrop(address indexed token, address indexed to, uint256[] ids);\\n    event ClaimERC1155Airdrop(address indexed token, address indexed to, uint256[] ids, uint256[] amounts, bytes data);\\n\\n    function takeBorrowOffer(\\n        BespokeTypes.Offer memory offerData,\\n        uint256 supplyAmount,\\n        uint256 supplyDuration\\n    ) external returns (uint256);\\n\\n    function takeBorrowOfferETH(\\n        BespokeTypes.Offer memory offerData,\\n        uint256 supplyAmount,\\n        uint256 supplyDuration\\n    ) external payable returns (uint256);\\n\\n    function takeLendOffer(\\n        BespokeTypes.Offer memory offerData,\\n        uint256 tokenId,\\n        uint256 borrowAmount,\\n        uint256 borrowDuration,\\n        bytes memory params\\n    ) external returns (uint256);\\n\\n    function repay(uint256 loanId) external;\\n\\n    function repayETH(uint256 loanId) external payable;\\n\\n    function foreclose(uint256 loanId) external;\\n\\n    function cancelAllBorrowOffersForSender(uint256 minNonce_) external;\\n\\n    function cancelMultipleBorrowOffers(uint256[] calldata offerNonces) external;\\n\\n    function isValidNonce(address account, uint256 nonce) external view returns (bool);\\n\\n    function getLoanData(uint256 loanId) external view returns (BespokeTypes.LoanData memory);\\n\\n    function getStatus(uint256 loanId) external view returns (BespokeTypes.LoanStatus);\\n\\n    function getBorrowInterest(uint256 loanId) external view returns (uint256);\\n\\n    function getBorrowBalance(uint256 loanId) external view returns (uint256);\\n\\n    function getPenalty(uint256 loanId) external view returns (uint256);\\n\\n    /**\\n     * @notice Allows smart contracts to access the collateralized NFT within one transaction,\\n     * as long as the amount taken plus a fee is returned\\n     * @dev IMPORTANT There are security concerns for developers of flash loan receiver contracts that must be carefully considered\\n     * @param receiverAddress The address of the contract receiving the funds, implementing IFlashClaimReceiver interface\\n     * @param loanIds The ID of loan being flash-borrowed\\n     * @param params packed params to pass to the receiver as extra information\\n     **/\\n    function flashClaim(\\n        address receiverAddress,\\n        uint256[] calldata loanIds,\\n        bytes calldata params\\n    ) external;\\n\\n    /**\\n     * @notice Claim the ERC20 token which has been airdropped to the loan contract\\n     * @param token The address of the airdropped token\\n     * @param to The address which will receive ERC20 token\\n     * @param amount The amount of the ERC20 token\\n     **/\\n    function claimERC20Airdrop(\\n        address token,\\n        address to,\\n        uint256 amount\\n    ) external;\\n\\n    /**\\n     * @notice Claim the ERC721 token which has been airdropped to the loan contract\\n     * @param token The address of the airdropped token\\n     * @param to The address which will receive the ERC721 token\\n     * @param ids The ID of the ERC721 token\\n     **/\\n    function claimERC721Airdrop(\\n        address token,\\n        address to,\\n        uint256[] calldata ids\\n    ) external;\\n\\n    /**\\n     * @notice Claim the ERC1155 token which has been airdropped to the loan contract\\n     * @param token The address of the airdropped token\\n     * @param to The address which will receive the ERC1155 tokens\\n     * @param ids The ID of the ERC1155 token\\n     * @param amounts The amount of the ERC1155 tokens\\n     * @param data packed params to pass to the receiver as extra information\\n     **/\\n    function claimERC1155Airdrop(\\n        address token,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x0b451b7cd7fb1b4fa1bc2b4b292aa4cbcdbd4a2ceeae6037817eb75662e37aad\",\"license\":\"MIT\"},\"contracts/bespokemarket/libraries/BespokeTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary BespokeTypes {\\n    struct Offer {\\n        bool isProrated;\\n        uint256 reserveId;\\n        OfferType offerType;// move offerType field here so solve encode/decode issue\\n        address nftAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address signer; //borrower or lender\\n        uint256 borrowAmountMin;\\n        uint256 borrowAmountMax;\\n        uint40 borrowDurationMin;\\n        uint40 borrowDurationMax;\\n        uint128 borrowRate;\\n        address currency;\\n        uint256 nonce;\\n        uint256 deadline;\\n        address strategy;\\n        bytes params;\\n        uint8 v; // v: parameter (27 or 28)\\n        bytes32 r; // r: parameter\\n        bytes32 s; // s: parameter\\n    }\\n    \\n    enum OfferType {\\n        BORROW, // borrow offer\\n        SINGLE, // single\\n        COLLECTION, // offer to collection\\n        MULTIPLE, // many. only for ERC721\\n        ATTRIBUTE, // by attribute\\n        PRIVATE // private\\n    }\\n\\n    // params for takeLendOffer\\n    struct LendOfferTakeParams {\\n        address taker;\\n        uint256 tokenId;\\n        bytes params;\\n    }\\n\\n    struct validateTakeLendOfferParams {\\n        bytes32 offerHash;\\n        address underlyingSpecified;\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n        bytes32 domainSeparator;\\n        address bespokeSettings;\\n        address settings;\\n    }\\n\\n    struct executeTakeLendParams {\\n        uint256 tokenId;\\n        uint256 borrowAmount; // new borrow amount\\n        uint256 borrowDuration; // new borrow duration\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n//        bytes32 offerHash;\\n        bytes params;\\n    }\\n\\n    struct executeTakeBorrowParams {\\n        uint256 amount;\\n        uint256 duration;\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n        bytes32 offerHash;\\n    }\\n\\n    // repayAmount?\\n    // adminFee\\n    struct LoanData {\\n        uint256 reserveId;\\n        address nftAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address nftManager;\\n        address borrower;\\n        address lender;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        address currency;\\n        uint40 borrowDuration;\\n        uint40 borrowBegin;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        bool isProrated;\\n        LoanStatus status;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        OVERDUE,\\n        LIQUIDATABLE\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 overdueDuration;\\n    }\\n\\n    struct executeRolloverParams {\\n        uint256 loanId;\\n        uint256 borrowAmount; // new borrow amount\\n        uint256 borrowDuration; // new borrow duration\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n        bytes32 offerHash;\\n    }\\n\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n}\\n\",\"keccak256\":\"0x3c719113ba55e49e038a483a3617905adc689355a3216dee18f5bb598ed4129e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516108f23803806108f283398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161084c6100a660003960008181606901528181610158015281816102e301528181610377015261040b015261084c6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063622fe39f1461003b578063f46f16c214610064575b600080fd5b61004e6100493660046104a1565b6100a3565b60405161005b91906104f2565b60405180910390f35b61008b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161005b565b61013f6040805161026081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a08101829052906101c08201908152602001600081526020016000815260200160008152602001600081525090565b60405163622fe39f60e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063622fe39f9060240161022060405180830381865afa1580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc91906106d3565b90506040518061026001604052808260000151815260200182602001516001600160a01b0316815260200182604001518152602001826060015181526020018260a001516001600160a01b031681526020018260e0015181526020018261010001516001600160801b031681526020018261012001516001600160801b031681526020018261014001516001600160a01b0316815260200182610160015164ffffffffff16815260200182610180015164ffffffffff168152602001826101a0015164ffffffffff168152602001826101c0015164ffffffffff1681526020018260c001516001600160a01b0316815260200182610200015160038111156102d6576102d66104ba565b81526020018481526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b52b365866040518263ffffffff1660e01b815260040161032f91815260200190565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906107fd565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166396e59682866040518263ffffffff1660e01b81526004016103c391815260200190565b602060405180830381865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040491906107fd565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c187495866040518263ffffffff1660e01b815260040161045791815260200190565b602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049891906107fd565b90529392505050565b6000602082840312156104b357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600481106104ee57634e487b7160e01b600052602160045260246000fd5b9052565b81518152602080830151610260830191610516908401826001600160a01b03169052565b506040830151604083015260608301516060830152608083015161054560808401826001600160a01b03169052565b5060a083015160a083015260c083015161056a60c08401826001600160801b03169052565b5060e083015161058560e08401826001600160801b03169052565b50610100838101516001600160a01b03908116918401919091526101208085015164ffffffffff90811691850191909152610140808601518216908501526101608086015182169085015261018080860151909116908401526101a080850151909116908301526101c0808401516105ff828501826104d0565b50506101e083810151908301526102008084015190830152610220808401519083015261024092830151929091019190915290565b604051610220810167ffffffffffffffff8111828210171561066657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b038116811461068357600080fd5b919050565b80516001600160801b038116811461068357600080fd5b805164ffffffffff8116811461068357600080fd5b8051801515811461068357600080fd5b80516004811061068357600080fd5b600061022082840312156106e657600080fd5b6106ee610634565b825181526106fe6020840161066c565b602082015260408301516040820152606083015160608201526107236080840161066c565b608082015261073460a0840161066c565b60a082015261074560c0840161066c565b60c082015260e083015160e0820152610100610762818501610688565b90820152610120610774848201610688565b9082015261014061078684820161066c565b9082015261016061079884820161069f565b908201526101806107aa84820161069f565b908201526101a06107bc84820161069f565b908201526101c06107ce84820161069f565b908201526101e06107e08482016106b4565b908201526102006107f28482016106c4565b908201529392505050565b60006020828403121561080f57600080fd5b505191905056fea2646970667358221220b1070d18c99f0045a0e52f2d23ae4125a1454d4e933ab4efdf312c678475543664736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063622fe39f1461003b578063f46f16c214610064575b600080fd5b61004e6100493660046104a1565b6100a3565b60405161005b91906104f2565b60405180910390f35b61008b7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161005b565b61013f6040805161026081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052610160810182905261018081018290526101a08101829052906101c08201908152602001600081526020016000815260200160008152602001600081525090565b60405163622fe39f60e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063622fe39f9060240161022060405180830381865afa1580156101a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101cc91906106d3565b90506040518061026001604052808260000151815260200182602001516001600160a01b0316815260200182604001518152602001826060015181526020018260a001516001600160a01b031681526020018260e0015181526020018261010001516001600160801b031681526020018261012001516001600160801b031681526020018261014001516001600160a01b0316815260200182610160015164ffffffffff16815260200182610180015164ffffffffff168152602001826101a0015164ffffffffff168152602001826101c0015164ffffffffff1681526020018260c001516001600160a01b0316815260200182610200015160038111156102d6576102d66104ba565b81526020018481526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636b52b365866040518263ffffffff1660e01b815260040161032f91815260200190565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906107fd565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166396e59682866040518263ffffffff1660e01b81526004016103c391815260200190565b602060405180830381865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040491906107fd565b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631c187495866040518263ffffffff1660e01b815260040161045791815260200190565b602060405180830381865afa158015610474573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049891906107fd565b90529392505050565b6000602082840312156104b357600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600481106104ee57634e487b7160e01b600052602160045260246000fd5b9052565b81518152602080830151610260830191610516908401826001600160a01b03169052565b506040830151604083015260608301516060830152608083015161054560808401826001600160a01b03169052565b5060a083015160a083015260c083015161056a60c08401826001600160801b03169052565b5060e083015161058560e08401826001600160801b03169052565b50610100838101516001600160a01b03908116918401919091526101208085015164ffffffffff90811691850191909152610140808601518216908501526101608086015182169085015261018080860151909116908401526101a080850151909116908301526101c0808401516105ff828501826104d0565b50506101e083810151908301526102008084015190830152610220808401519083015261024092830151929091019190915290565b604051610220810167ffffffffffffffff8111828210171561066657634e487b7160e01b600052604160045260246000fd5b60405290565b80516001600160a01b038116811461068357600080fd5b919050565b80516001600160801b038116811461068357600080fd5b805164ffffffffff8116811461068357600080fd5b8051801515811461068357600080fd5b80516004811061068357600080fd5b600061022082840312156106e657600080fd5b6106ee610634565b825181526106fe6020840161066c565b602082015260408301516040820152606083015160608201526107236080840161066c565b608082015261073460a0840161066c565b60a082015261074560c0840161066c565b60c082015260e083015160e0820152610100610762818501610688565b90820152610120610774848201610688565b9082015261014061078684820161066c565b9082015261016061079884820161069f565b908201526101806107aa84820161069f565b908201526101a06107bc84820161069f565b908201526101c06107ce84820161069f565b908201526101e06107e08482016106b4565b908201526102006107f28482016106c4565b908201529392505050565b60006020828403121561080f57600080fd5b505191905056fea2646970667358221220b1070d18c99f0045a0e52f2d23ae4125a1454d4e933ab4efdf312c678475543664736f6c634300080a0033",
  "libraries": {
    "BespokeTypes": "0xA3f72EFE184A58706Ef2DeC6C6fbd6c58e8FDA20"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}