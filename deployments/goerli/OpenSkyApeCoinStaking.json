{
  "address": "0xF216321F8a9d8c02b965c4E9063e30649B1048c8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "apeCoin",
          "type": "address"
        },
        {
          "internalType": "contract IApeCoinStaking",
          "name": "apeCoinStaking",
          "type": "address"
        },
        {
          "internalType": "contract IOpenSkySettings",
          "name": "settings",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "APE_COIN",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APE_COIN_STAKING",
      "outputs": [
        {
          "internalType": "contract IApeCoinStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SETTINGS",
      "outputs": [
        {
          "internalType": "contract IOpenSkySettings",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userProxies",
      "outputs": [
        {
          "internalType": "contract UserProxy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc3c959e58db7c146dc8cb0b342f812c89d1e2283c1a38960d3cfde208a9e26a6",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0xF216321F8a9d8c02b965c4E9063e30649B1048c8",
    "transactionIndex": 12,
    "gasUsed": "1582855",
    "logsBloom": "0x
    "blockHash": "0x423d0ecfa2ccf6de1ead395181e337d2b25680c4bebd5c4d590baaa7ae040cce",
    "transactionHash": "0xc3c959e58db7c146dc8cb0b342f812c89d1e2283c1a38960d3cfde208a9e26a6",
    "logs": [],
    "blockNumber": 8049359,
    "cumulativeGasUsed": "2310513",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x328507DC29C95c170B56a1b3A758eB7a9E73455c",
    "0x831e0c7A89Dbc52a1911b78ebf4ab905354C96Ce",
    "0x90499A6848275e03E8De6608980F4e7d32fbaF6F"
  ],
  "solcInputHash": "c08a05136598e2539f04041466f19c06",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"apeCoin\",\"type\":\"address\"},{\"internalType\":\"contract IApeCoinStaking\",\"name\":\"apeCoinStaking\",\"type\":\"address\"},{\"internalType\":\"contract IOpenSkySettings\",\"name\":\"settings\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"APE_COIN\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APE_COIN_STAKING\",\"outputs\":[{\"internalType\":\"contract IApeCoinStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SETTINGS\",\"outputs\":[{\"internalType\":\"contract IOpenSkySettings\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userProxies\",\"outputs\":[{\"internalType\":\"contract UserProxy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol\":\"OpenSkyApeCoinStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x8756c97d6004b1ae21517a013bdec72fbf30be7852afb2f395871d280131b250\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/interfaces/IOpenSkyIncentivesController.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IOpenSkyIncentivesController {\\n    function handleAction(\\n        address account,\\n        uint256 userBalance,\\n        uint256 totalSupply\\n    ) external;\\n\\n    function getRewardsBalance(address[] calldata assets, address user) external view returns (uint256);\\n\\n    function claimRewards(\\n        address[] calldata assets,\\n        uint256 amount,\\n        address to,\\n        bool stake\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x54643871d96144866e7076d90687f730352afca73a363cc108b2cedfa7c197c8\",\"license\":\"MIT\"},\"contracts/interfaces/IOpenSkySettings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport '../libraries/types/DataTypes.sol';\\n\\ninterface IOpenSkySettings {\\n    event InitPoolAddress(address operator, address address_);\\n    event InitLoanAddress(address operator, address address_);\\n    event InitVaultFactoryAddress(address operator, address address_);\\n    event InitIncentiveControllerAddress(address operator, address address_);\\n    event InitWETHGatewayAddress(address operator, address address_);\\n    event InitPunkGatewayAddress(address operator, address address_);\\n    event InitDaoVaultAddress(address operator, address address_);\\n\\n    event AddToWhitelist(address operator, uint256 reserveId, address nft);\\n    event RemoveFromWhitelist(address operator, uint256 reserveId, address nft);\\n    event SetReserveFactor(address operator, uint256 factor);\\n    event SetPrepaymentFeeFactor(address operator, uint256 factor);\\n    event SetOverdueLoanFeeFactor(address operator, uint256 factor);\\n    event SetMoneyMarketAddress(address operator, address address_);\\n    event SetTreasuryAddress(address operator, address address_);\\n    event SetACLManagerAddress(address operator, address address_);\\n    event SetLoanDescriptorAddress(address operator, address address_);\\n    event SetNftPriceOracleAddress(address operator, address address_);\\n    event SetInterestRateStrategyAddress(address operator, address address_);\\n    event AddLiquidator(address operator, address address_);\\n    event RemoveLiquidator(address operator, address address_);\\n\\n    function poolAddress() external view returns (address);\\n\\n    function loanAddress() external view returns (address);\\n\\n    function vaultFactoryAddress() external view returns (address);\\n\\n    function incentiveControllerAddress() external view returns (address);\\n\\n    function wethGatewayAddress() external view returns (address);\\n\\n    function punkGatewayAddress() external view returns (address);\\n\\n    function inWhitelist(uint256 reserveId, address nft) external view returns (bool);\\n\\n    function getWhitelistDetail(uint256 reserveId, address nft) external view returns (DataTypes.WhitelistInfo memory);\\n\\n    function reserveFactor() external view returns (uint256); // treasury ratio\\n\\n    function MAX_RESERVE_FACTOR() external view returns (uint256);\\n\\n    function prepaymentFeeFactor() external view returns (uint256);\\n\\n    function overdueLoanFeeFactor() external view returns (uint256);\\n\\n    function moneyMarketAddress() external view returns (address);\\n\\n    function treasuryAddress() external view returns (address);\\n\\n    function daoVaultAddress() external view returns (address);\\n\\n    function ACLManagerAddress() external view returns (address);\\n\\n    function loanDescriptorAddress() external view returns (address);\\n\\n    function nftPriceOracleAddress() external view returns (address);\\n\\n    function interestRateStrategyAddress() external view returns (address);\\n    \\n    function isLiquidator(address liquidator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd5c1c2468464891b3ce379c8a03bc21c2c67fcf0c7493e3b35fd573fa21ea448\",\"license\":\"MIT\"},\"contracts/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary DataTypes {\\n    struct ReserveData {\\n        uint256 reserveId;\\n        address underlyingAsset;\\n        address oTokenAddress;\\n        address moneyMarketAddress;\\n        uint128 lastSupplyIndex;\\n        uint256 borrowingInterestPerSecond;\\n        uint256 lastMoneyMarketBalance;\\n        uint40 lastUpdateTimestamp;\\n        uint256 totalBorrows;\\n        address interestModelAddress;\\n        uint256 treasuryFactor;\\n        bool isMoneyMarketOn;\\n    }\\n\\n    struct LoanData {\\n        uint256 reserveId;\\n        address nftAddress;\\n        uint256 tokenId;\\n        address borrower;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        uint40 borrowBegin;\\n        uint40 borrowDuration;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        uint40 extendableTime;\\n        uint40 borrowEnd;\\n        LoanStatus status;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        EXTENDABLE,\\n        OVERDUE,\\n        LIQUIDATABLE,\\n        LIQUIDATING\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        string name;\\n        string symbol;\\n        uint256 LTV;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 extendableDuration;\\n        uint256 overdueDuration;\\n    }\\n}\\n\",\"keccak256\":\"0x487cd1dedb3146da46144bc8f0e5b970c5173efa8c19700184b8207c1ee3fc55\",\"license\":\"MIT\"},\"contracts/misc/UserProxies.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport './UserProxy.sol';\\n\\ncontract UserProxies {\\n    mapping(address => UserProxy) public userProxies;\\n\\n    function _getUserProxy(address user) internal returns (address) {\\n        UserProxy userProxy = userProxies[user];\\n        if (address(userProxy) == address(0)) {\\n            userProxy = new UserProxy();\\n            userProxies[user] = userProxy;\\n        }\\n        return address(userProxy);\\n    }\\n\\n    function _callUserProxy(\\n        address user,\\n        address target,\\n        bytes memory data\\n    ) internal {\\n        require(address(userProxies[msg.sender]) != address(0), \\\"HAS_NO_PROXY\\\");\\n        userProxies[user].execute(target, data, 0);\\n    }\\n}\",\"keccak256\":\"0xff3663d5861845c954c20aeef862ccfc5c5f854a8d4581a8167c57b56ba73545\",\"license\":\"MIT\"},\"contracts/misc/UserProxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\n\\ncontract UserProxy is ERC721Holder {\\n    address public immutable owner;\\n\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    function execute(address target, bytes memory data, uint256 value) external {\\n        require(msg.sender == owner, \\\"ONLY_OWNER\\\");\\n        (bool success, ) = target.call{value: value}(data);\\n        require(success, \\\"LOW_LEVEL_CALL_REVERTED\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x9a95653bfaf827c063b89ab75eee4f4cf9d5c3eea7b3615a60ed9c577490b6d4\",\"license\":\"MIT\"},\"contracts/misc/ape-staking/IApeCoinStaking.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\n/**\\n * @title ApeCoin Staking Contract\\n * @notice Stake ApeCoin across four different pools that release hourly rewards\\n * @author HorizenLabs\\n */\\ninterface IApeCoinStaking {\\n\\n    /// @notice State for ApeCoin, BAYC, MAYC, and Pair Pools\\n    struct Pool {\\n        uint256 lastRewardedTimestampHour;\\n        uint256 lastRewardsRangeIndex;\\n        uint256 stakedAmount;\\n        uint256 accumulatedRewardsPerShare;\\n        TimeRange[] timeRanges;\\n    }\\n\\n    /// @notice Pool rules valid for a given duration of time.\\n    /// @dev All TimeRange timestamp values must represent whole hours\\n    struct TimeRange {\\n        uint256 startTimestampHour;\\n        uint256 endTimestampHour;\\n        uint256 rewardsPerHour;\\n        uint256 capPerPosition;\\n    }\\n\\n    /// @dev Convenience struct for front-end applications\\n    struct PoolUI {\\n        uint256 poolId;\\n        uint256 stakedAmount;\\n        TimeRange currentTimeRange;\\n    }\\n\\n    /// @dev Per address amount and reward tracking\\n    struct Position {\\n        uint256 stakedAmount;\\n        int256 rewardsDebt;\\n    }\\n\\n    /// @dev Struct for depositing and withdrawing from the BAYC and MAYC NFT pools\\n    struct SingleNft {\\n        uint256 tokenId;\\n        uint256 amount;\\n    }\\n    /// @dev Struct for depositing and withdrawing from the BAKC (Pair) pool\\n    struct PairNftWithAmount {\\n        uint256 mainTokenId;\\n        uint256 bakcTokenId;\\n        uint256 amount;\\n    }\\n    /// @dev Struct for claiming from an NFT pool\\n    struct PairNft {\\n        uint256 mainTokenId;\\n        uint256 bakcTokenId;\\n    }\\n    /// @dev NFT paired status.  Can be used bi-directionally (BAYC/MAYC -> BAKC) or (BAKC -> BAYC/MAYC)\\n    struct PairingStatus {\\n        uint256 tokenId;\\n        bool isPaired;\\n    }\\n\\n    // @dev UI focused payload\\n    struct DashboardStake {\\n        uint256 poolId;\\n        uint256 tokenId;\\n        uint256 deposited;\\n        uint256 unclaimed;\\n        uint256 rewards24hr;\\n        DashboardPair pair;\\n    }\\n    /// @dev Sub struct for DashboardStake\\n    struct DashboardPair {\\n        uint256 mainTokenId;\\n        uint256 mainTypePoolId;\\n    }\\n\\n    // Deposit/Commit Methods\\n\\n    /**\\n     * @notice Deposit ApeCoin to the ApeCoin Pool\\n     * @param _amount Amount in ApeCoin\\n     * @param _recipient Address the deposit it stored to\\n     * @dev ApeCoin deposit must be >= 1 ApeCoin\\n     */\\n    function depositApeCoin(uint256 _amount, address _recipient) external;\\n\\n    /**\\n     * @notice Deposit ApeCoin to the ApeCoin Pool\\n     * @param _amount Amount in ApeCoin\\n     * @dev Deposit on behalf of msg.sender. ApeCoin deposit must be >= 1 ApeCoin\\n     */\\n    function depositSelfApeCoin(uint256 _amount) external;\\n\\n    /**\\n     * @notice Deposit ApeCoin to the BAYC Pool\\n     * @param _nfts Array of SingleNft structs\\n     * @dev Commits 1 or more BAYC NFTs, each with an ApeCoin amount to the BAYC pool.\\\\\\n     * Each BAYC committed must attach an ApeCoin amount >= 1 ApeCoin and <= the BAYC pool cap amount.\\n     */\\n    function depositBAYC(SingleNft[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Deposit ApeCoin to the MAYC Pool\\n     * @param _nfts Array of SingleNft structs\\n     * @dev Commits 1 or more MAYC NFTs, each with an ApeCoin amount to the MAYC pool.\\\\\\n     * Each MAYC committed must attach an ApeCoin amount >= 1 ApeCoin and <= the MAYC pool cap amount.\\n     */\\n    function depositMAYC(SingleNft[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Deposit ApeCoin to the Pair Pool, where Pair = (BAYC + BAKC) or (MAYC + BAKC)\\n     * @param _baycPairs Array of PairNftWithAmount structs\\n     * @param _maycPairs Array of PairNftWithAmount structs\\n     * @dev Commits 1 or more Pairs, each with an ApeCoin amount to the Pair pool.\\\\\\n     * Each BAKC committed must attach an ApeCoin amount >= 1 ApeCoin and <= the Pair pool cap amount.\\\\\\n     * Example 1: BAYC + BAKC + 1 ApeCoin:  [[0, 0, \\\"1000000000000000000\\\"],[]]\\\\\\n     * Example 2: MAYC + BAKC + 1 ApeCoin:  [[], [0, 0, \\\"1000000000000000000\\\"]]\\\\\\n     * Example 3: (BAYC + BAKC + 1 ApeCoin) and (MAYC + BAKC + 1 ApeCoin): [[0, 0, \\\"1000000000000000000\\\"], [0, 1, \\\"1000000000000000000\\\"]]\\n     */\\n    function depositBAKC(PairNftWithAmount[] calldata _baycPairs, PairNftWithAmount[] calldata _maycPairs) external;\\n    // Claim Rewards Methods\\n\\n    /**\\n     * @notice Claim rewards for msg.sender and send to recipient\\n     * @param _recipient Address to send claim reward to\\n     */\\n    function claimApeCoin(address _recipient) external;\\n\\n    /// @notice Claim and send rewards\\n    function claimSelfApeCoin() external;\\n\\n    /**\\n     * @notice Claim rewards for array of BAYC NFTs and send to recipient\\n     * @param _nfts Array of NFTs owned and committed by the msg.sender\\n     * @param _recipient Address to send claim reward to\\n     */\\n    function claimBAYC(uint256[] calldata _nfts, address _recipient) external;\\n\\n    /**\\n     * @notice Claim rewards for array of BAYC NFTs\\n     * @param _nfts Array of NFTs owned and committed by the msg.sender\\n     */\\n    function claimSelfBAYC(uint256[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Claim rewards for array of MAYC NFTs and send to recipient\\n     * @param _nfts Array of NFTs owned and committed by the msg.sender\\n     * @param _recipient Address to send claim reward to\\n     */\\n    function claimMAYC(uint256[] calldata _nfts, address _recipient) external;\\n\\n    /**\\n     * @notice Claim rewards for array of MAYC NFTs\\n     * @param _nfts Array of NFTs owned and committed by the msg.sender\\n     */\\n    function claimSelfMAYC(uint256[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Claim rewards for array of Paired NFTs and send to recipient\\n     * @param _baycPairs Array of Paired BAYC NFTs owned and committed by the msg.sender\\n     * @param _maycPairs Array of Paired MAYC NFTs owned and committed by the msg.sender\\n     * @param _recipient Address to send claim reward to\\n     */\\n    function claimBAKC(PairNft[] calldata _baycPairs, PairNft[] calldata _maycPairs, address _recipient) external;\\n\\n    /**\\n     * @notice Claim rewards for array of Paired NFTs\\n     * @param _baycPairs Array of Paired BAYC NFTs owned and committed by the msg.sender\\n     * @param _maycPairs Array of Paired MAYC NFTs owned and committed by the msg.sender\\n     */\\n    function claimSelfBAKC(PairNft[] calldata _baycPairs, PairNft[] calldata _maycPairs) external;\\n\\n    // Uncommit/Withdraw Methods\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the ApeCoin pool.  Performs an automatic claim as part of the withdraw process.\\n     * @param _amount Amount of ApeCoin\\n     * @param _recipient Address to send withdraw amount and claim to\\n     */\\n    function withdrawApeCoin(uint256 _amount, address _recipient) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the ApeCoin pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _amount Amount of ApeCoin\\n     */\\n    function withdrawSelfApeCoin(uint256 _amount) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the BAYC pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _nfts Array of BAYC NFT's with staked amounts\\n     * @param _recipient Address to send withdraw amount and claim to\\n     */\\n    function withdrawBAYC(SingleNft[] calldata _nfts, address _recipient) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the BAYC pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _nfts Array of BAYC NFT's with staked amounts\\n     */\\n    function withdrawSelfBAYC(SingleNft[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the MAYC pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _nfts Array of MAYC NFT's with staked amounts\\n     * @param _recipient Address to send withdraw amount and claim to\\n     */\\n    function withdrawMAYC(SingleNft[] calldata _nfts, address _recipient) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the MAYC pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _nfts Array of MAYC NFT's with staked amounts\\n     */\\n    function withdrawSelfMAYC(SingleNft[] calldata _nfts) external;\\n\\n    /**\\n     * @notice Withdraw staked ApeCoin from the Pair pool.  If withdraw is total staked amount, performs an automatic claim.\\n     * @param _baycPairs Array of Paired BAYC NFT's with staked amounts\\n     * @param _maycPairs Array of Paired MAYC NFT's with staked amounts\\n     * @dev if pairs have split ownership and BAKC is attempting a withdraw, the withdraw must be for the total staked amount\\n     */\\n    function withdrawBAKC(PairNftWithAmount[] calldata _baycPairs, PairNftWithAmount[] calldata _maycPairs) external;\\n\\n    // Pool Methods\\n\\n    /**\\n     * @return The amount of ApeCoin rewards to be distributed by pool for a given time range\\n     * @param _poolId Available pool values 0-3\\n     * @param _from Whole hour timestamp representation\\n     * @param _to Whole hour timestamp representation\\n     */\\n    function rewardsBy(uint256 _poolId, uint256 _from, uint256 _to) external view returns (uint256, uint256);\\n\\n    /**\\n     * @dev Updates reward variables `lastRewardedTimestampHour`, `accumulatedRewardsPerShare` and `lastRewardsRangeIndex`\\n     * for a given pool.\\n     * @param _poolId Available pool values 0-3\\n     */\\n    function updatePool(uint256 _poolId) external;\\n\\n    /**\\n     * @return staked amount for addressPosition [APECOIN] and nftPositions [BAYC, MAYC, and Pair(BAKC)] for voting.\\n     */\\n    function stakedTotal(address _addr) external view returns (uint256);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition [APECOIN, BAYC, MAYC, BAKC].\\n     */\\n    function getAllStakes(address _address) external view returns (DashboardStake[] memory);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition [APECOIN].\\n     */\\n    function getApeCoinStake(address _address) external view returns (DashboardStake memory);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition [BAYC].\\n     */\\n    function getBaycStakes(address _address) external view returns (DashboardStake[] memory);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition [MAYC].\\n     */\\n    function getMaycStakes(address _address) external view returns (DashboardStake[] memory);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition [BAKC].\\n     */\\n    function getBakcStakes(address _address) external view returns (DashboardStake[] memory);\\n\\n    /**\\n     * @return staked amount, pending rewards, and estimated rewards over the last 24 hours\\n     *      for addressPosition when BAKC Pool Pair is split.\\n     *      ie (BAYC/MAYC) and BAKC in pair pool have different owners.\\n     */\\n    function getSplitStakes(address _address) external view returns (DashboardStake[] memory);\\n\\n    /**\\n     * @return current amount of claimable $APE rewards for a given position from a given pool.\\n     * @param _poolId Available pool values 0-3\\n     * @param _address Address to lookup Position for\\n     * @param _tokenId An NFT id\\n     */\\n    function pendingRewards(uint256 _poolId, address _address, uint256 _tokenId) external view returns (uint256);\\n}\",\"keccak256\":\"0xaa124d7c92d90ebcc67ce3200ab547eb4fde53440d94fa415bcccd5c4f46b17f\",\"license\":\"MIT\"},\"contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"./IApeCoinStaking.sol\\\";\\nimport \\\"../UserProxies.sol\\\";\\nimport \\\"../../interfaces/IOpenSkySettings.sol\\\";\\nimport \\\"../../interfaces/IOpenSkyIncentivesController.sol\\\";\\n\\ncontract OpenSkyApeCoinStaking is UserProxies, ERC20 {\\n    using SafeERC20 for IERC20;\\n\\n    IERC20 public immutable APE_COIN;\\n    IApeCoinStaking public immutable APE_COIN_STAKING;\\n    IOpenSkySettings public immutable SETTINGS;\\n\\n    constructor(\\n        IERC20 apeCoin,\\n        IApeCoinStaking apeCoinStaking,\\n        IOpenSkySettings settings\\n    ) ERC20(\\\"OpenSky Ape Coin Staking\\\", \\\"OAPE\\\") {\\n        APE_COIN = apeCoin;\\n        APE_COIN_STAKING = apeCoinStaking;\\n        SETTINGS = settings;\\n    }\\n\\n    function deposit(uint256 _amount) external {\\n        _mint(msg.sender, _amount);\\n\\n        APE_COIN.safeTransferFrom(msg.sender, address(this), _amount);\\n        APE_COIN.approve(address(APE_COIN_STAKING), _amount);\\n        APE_COIN_STAKING.depositApeCoin(_amount, _getUserProxy(msg.sender));\\n    }\\n\\n    function withdraw(uint256 _amount) external {\\n        _burn(msg.sender, _amount);\\n\\n        bytes memory data = abi.encodeWithSignature(\\\"withdrawApeCoin(uint256,address)\\\", _amount, msg.sender);\\n        _callUserProxy(msg.sender, address(APE_COIN_STAKING), data);\\n    }\\n\\n    function claim() external {\\n        bytes memory data = abi.encodeWithSignature(\\\"claimApeCoin(address)\\\", msg.sender);\\n        _callUserProxy(msg.sender, address(APE_COIN_STAKING), data);\\n    }\\n\\n    function _mint(address account, uint256 amount) internal virtual override {\\n        uint256 previousBalance = balanceOf(account);\\n        uint256 previousTotalSupply = totalSupply();\\n\\n        super._mint(account, amount);\\n\\n        address incentiveControllerAddress = SETTINGS.incentiveControllerAddress();\\n        if (incentiveControllerAddress != address(0)) {\\n            IOpenSkyIncentivesController(incentiveControllerAddress).handleAction(\\n                account,\\n                previousBalance,\\n                previousTotalSupply\\n            );\\n        }\\n    }\\n\\n    function _burn(address account, uint256 amount) internal virtual override {\\n        uint256 previousBalance = balanceOf(account);\\n        uint256 previousTotalSupply = totalSupply();\\n\\n        super._burn(account, amount);\\n\\n        address incentiveControllerAddress = SETTINGS.incentiveControllerAddress();\\n        if (incentiveControllerAddress != address(0)) {\\n            IOpenSkyIncentivesController(incentiveControllerAddress).handleAction(\\n                account,\\n                previousBalance,\\n                previousTotalSupply\\n            );\\n        }\\n    }\\n\\n    function _transfer(address sender, address recipient, uint256 amount) internal override {\\n        uint256 previousSenderBalance = balanceOf(sender);\\n        uint256 previousRecipientBalance = balanceOf(recipient);\\n\\n        super._transfer(sender, recipient, amount);\\n\\n        address incentiveControllerAddress = SETTINGS.incentiveControllerAddress();\\n        if (incentiveControllerAddress != address(0)) {\\n            uint256 currentTotalSupply = totalSupply();\\n            IOpenSkyIncentivesController(incentiveControllerAddress).handleAction(\\n                sender,\\n                previousSenderBalance,\\n                currentTotalSupply\\n            );\\n            if (sender != recipient) {\\n                IOpenSkyIncentivesController(incentiveControllerAddress).handleAction(\\n                    recipient,\\n                    previousRecipientBalance,\\n                    currentTotalSupply\\n                );\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xdf55c89df4b4d40c61bf0fab13e3c59fd5a0975d472bec47f29c73572d7d3a30\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b5060405162001d4d38038062001d4d833981016040819052620000349162000195565b6040518060400160405280601881526020017f4f70656e536b792041706520436f696e205374616b696e670000000000000000815250604051806040016040528060048152602001634f41504560e01b81525081600490805190602001906200009f929190620000d6565b508051620000b5906005906020840190620000d6565b5050506001600160a01b0392831660805290821660a0521660c05262000226565b828054620000e490620001e9565b90600052602060002090601f01602090048101928262000108576000855562000153565b82601f106200012357805160ff191683800117855562000153565b8280016001018555821562000153579182015b828111156200015357825182559160200191906001019062000136565b506200016192915062000165565b5090565b5b8082111562000161576000815560010162000166565b6001600160a01b03811681146200019257600080fd5b50565b600080600060608486031215620001ab57600080fd5b8351620001b8816200017c565b6020850151909350620001cb816200017c565b6040850151909250620001de816200017c565b809150509250925092565b600181811c90821680620001fe57607f821691505b602082108114156200022057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051611abf6200028e600039600081816102820152818161092c0152610aec01526000818161022d015281816104c40152818161056a0152818161069d015261073c0152600081816101c50152818161065e01526106cc0152611abf6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a9059cbb11610071578063a9059cbb1461026a578063ade97ab51461027d578063b4e76d19146102a4578063b6b55f25146102cd578063dd62ed3e146102e057600080fd5b806370a08231146101ff578063884f13ae1461022857806395d89b411461024f578063a457c2d71461025757600080fd5b80632e1a7d4d116100e95780632e1a7d4d14610181578063313ce5671461019657806339509351146101a55780634e71d92d146101b857806369db6d1f146101c057600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b610123610319565b604051610130919061145e565b60405180910390f35b61014c610147366004611486565b6103ab565b6040519015158152602001610130565b6003545b604051908152602001610130565b61014c61017c3660046114b2565b6103c1565b61019461018f3660046114f3565b610472565b005b60405160128152602001610130565b61014c6101b3366004611486565b6104ed565b610194610529565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b61016061020d36600461150c565b6001600160a01b031660009081526001602052604090205490565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b610123610592565b61014c610265366004611486565b6105a1565b61014c610278366004611486565b61063a565b6101e77f000000000000000000000000000000000000000000000000000000000000000081565b6101e76102b236600461150c565b6000602081905290815260409020546001600160a01b031681565b6101946102db3660046114f3565b610647565b6101606102ee366004611529565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b60606004805461032890611562565b80601f016020809104026020016040519081016040528092919081815260200182805461035490611562565b80156103a15780601f10610376576101008083540402835291602001916103a1565b820191906000526020600020905b81548152906001019060200180831161038457829003601f168201915b5050505050905090565b60006103b83384846107d5565b50600192915050565b60006103ce8484846108fa565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156104585760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61046585338584036107d5565b60019150505b9392505050565b61047c3382610ac2565b6040516024810182905233604482015260009060640160408051601f198184030181529190526020810180516001600160e01b031663e4e8184760e01b17905290506104e9337f000000000000000000000000000000000000000000000000000000000000000083610bed565b5050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103b89185906105249086906115b3565b6107d5565b60405133602482015260009060440160408051601f198184030181529190526020810180516001600160e01b03166317716f3360e11b179052905061058f337f000000000000000000000000000000000000000000000000000000000000000083610bed565b50565b60606005805461032890611562565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156106235760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161044f565b61063033858584036107d5565b5060019392505050565b60006103b83384846108fa565b6106513382610caf565b6106866001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016333084610cd5565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b3906044016020604051808303816000875af1158015610715573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073991906115cb565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bd5023a98261077333610d35565b6040516001600160e01b031960e085901b16815260048101929092526001600160a01b03166024820152604401600060405180830381600087803b1580156107ba57600080fd5b505af11580156107ce573d6000803e3d6000fd5b5050505050565b6001600160a01b0383166108375760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161044f565b6001600160a01b0382166108985760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161044f565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03838116600090815260016020526040808220549285168252902054610928858585610db7565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d6a723c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610988573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ac91906115ed565b90506001600160a01b03811615610aba5760006109c860035490565b6040516318c39f1760e11b81526001600160a01b0389811660048301526024820187905260448201839052919250908316906331873e2e90606401600060405180830381600087803b158015610a1d57600080fd5b505af1158015610a31573d6000803e3d6000fd5b50505050856001600160a01b0316876001600160a01b031614610ab8576040516318c39f1760e11b81526001600160a01b03878116600483015260248201859052604482018390528316906331873e2e90606401600060405180830381600087803b158015610a9f57600080fd5b505af1158015610ab3573d6000803e3d6000fd5b505050505b505b505050505050565b6001600160a01b038216600090815260016020526040902054600354610ae88484610f85565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d6a723c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c91906115ed565b90506001600160a01b038116156107ce576040516318c39f1760e11b81526001600160a01b03868116600483015260248201859052604482018490528216906331873e2e90606401600060405180830381600087803b158015610bce57600080fd5b505af1158015610be2573d6000803e3d6000fd5b505050505050505050565b336000908152602081905260409020546001600160a01b0316610c415760405162461bcd60e51b815260206004820152600c60248201526b4841535f4e4f5f50524f585960a01b604482015260640161044f565b6001600160a01b03808416600090815260208190526040808220549051631409412160e31b815292169163a04a090891610c81918691869160040161160a565b600060405180830381600087803b158015610c9b57600080fd5b505af1158015610ab8573d6000803e3d6000fd5b6001600160a01b038216600090815260016020526040902054600354610ae884846110d0565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610d2f9085906111af565b50505050565b6001600160a01b0380821660009081526020819052604081205490911680610db157604051610d63906113f9565b604051809103906000f080158015610d7f573d6000803e3d6000fd5b506001600160a01b03848116600090815260208190526040902080546001600160a01b03191691831691909117905590505b92915050565b6001600160a01b038316610e1b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161044f565b6001600160a01b038216610e7d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161044f565b6001600160a01b03831660009081526001602052604090205481811015610ef55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161044f565b6001600160a01b03808516600090815260016020526040808220858503905591851681529081208054849290610f2c9084906115b3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f7891815260200190565b60405180910390a3610d2f565b6001600160a01b038216610fe55760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161044f565b6001600160a01b038216600090815260016020526040902054818110156110595760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161044f565b6001600160a01b038316600090815260016020526040812083830390556003805484929061108890849061163e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108ed565b505050565b6001600160a01b0382166111265760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161044f565b806003600082825461113891906115b3565b90915550506001600160a01b038216600090815260016020526040812080548392906111659084906115b3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6000611204826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112819092919063ffffffff16565b8051909150156110cb578080602001905181019061122291906115cb565b6110cb5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161044f565b60606112908484600085611298565b949350505050565b6060824710156112f95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161044f565b843b6113475760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161044f565b600080866001600160a01b031685876040516113639190611655565b60006040518083038185875af1925050503d80600081146113a0576040519150601f19603f3d011682016040523d82523d6000602084013e6113a5565b606091505b50915091506113b58282866113c0565b979650505050505050565b606083156113cf57508161046b565b8251156113df5782518084602001fd5b8160405162461bcd60e51b815260040161044f919061145e565b6104188061167283390190565b60005b83811015611421578181015183820152602001611409565b83811115610d2f5750506000910152565b6000815180845261144a816020860160208601611406565b601f01601f19169290920160200192915050565b60208152600061046b6020830184611432565b6001600160a01b038116811461058f57600080fd5b6000806040838503121561149957600080fd5b82356114a481611471565b946020939093013593505050565b6000806000606084860312156114c757600080fd5b83356114d281611471565b925060208401356114e281611471565b929592945050506040919091013590565b60006020828403121561150557600080fd5b5035919050565b60006020828403121561151e57600080fd5b813561046b81611471565b6000806040838503121561153c57600080fd5b823561154781611471565b9150602083013561155781611471565b809150509250929050565b600181811c9082168061157657607f821691505b6020821081141561159757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156115c6576115c661159d565b500190565b6000602082840312156115dd57600080fd5b8151801515811461046b57600080fd5b6000602082840312156115ff57600080fd5b815161046b81611471565b6001600160a01b038416815260606020820181905260009061162e90830185611432565b9050826040830152949350505050565b6000828210156116505761165061159d565b500390565b60008251611667818460208701611406565b919091019291505056fe60a060405234801561001057600080fd5b50336080526080516103e3610035600039600081816087015260e101526103e36000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063150b7a02146100465780638da5cb5b14610082578063a04a0908146100c1575b600080fd5b6100646100543660046102b3565b630a85bd0160e11b949350505050565b6040516001600160e01b031990911681526020015b60405180910390f35b6100a97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610079565b6100d46100cf36600461031b565b6100d6565b005b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101405760405162461bcd60e51b815260206004820152600a60248201526927a7262cafa7aba722a960b11b60448201526064015b60405180910390fd5b6000836001600160a01b0316828460405161015b9190610372565b60006040518083038185875af1925050503d8060008114610198576040519150601f19603f3d011682016040523d82523d6000602084013e61019d565b606091505b50509050806101ee5760405162461bcd60e51b815260206004820152601760248201527f4c4f575f4c4556454c5f43414c4c5f52455645525445440000000000000000006044820152606401610137565b50505050565b80356001600160a01b038116811461020b57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261023757600080fd5b813567ffffffffffffffff8082111561025257610252610210565b604051601f8301601f19908116603f0116810190828211818310171561027a5761027a610210565b8160405283815286602085880101111561029357600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080608085870312156102c957600080fd5b6102d2856101f4565b93506102e0602086016101f4565b925060408501359150606085013567ffffffffffffffff81111561030357600080fd5b61030f87828801610226565b91505092959194509250565b60008060006060848603121561033057600080fd5b610339846101f4565b9250602084013567ffffffffffffffff81111561035557600080fd5b61036186828701610226565b925050604084013590509250925092565b6000825160005b818110156103935760208186018101518583015201610379565b818111156103a2576000828501525b50919091019291505056fea2646970667358221220d17253e5a11c66bc856d64965e99321ab66fa1ee8d48b52052ffaf60e5570ef564736f6c634300080a0033a26469706673582212209092927507c1c665c9ef3fbb057fe8ea7729933eb154d442e4de9a8d19e601cc64736f6c634300080a0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 26649,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "userProxies",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_contract(UserProxy)26778)"
      },
      {
        "astId": 2768,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "_balances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 2774,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "_allowances",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 2776,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2778,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "_name",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 2780,
        "contract": "contracts/misc/ape-staking/OpenSkyApeCoinStaking.sol:OpenSkyApeCoinStaking",
        "label": "_symbol",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(UserProxy)26778": {
        "encoding": "inplace",
        "label": "contract UserProxy",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(UserProxy)26778)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract UserProxy)",
        "numberOfBytes": "32",
        "value": "t_contract(UserProxy)26778"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}