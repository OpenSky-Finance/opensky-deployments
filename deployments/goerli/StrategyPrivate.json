{
  "address": "0x84a9c8bdaf3A8bBBA95500fB8a28871b0eC422B2",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isProrated",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "autoConvertWhenRepay",
              "type": "bool"
            },
            {
              "internalType": "enum BespokeTypes.OfferType",
              "name": "offerType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMax",
              "type": "uint256"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMin",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMax",
              "type": "uint40"
            },
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "lendAsset",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nonceMaxTimes",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BespokeTypes.Offer",
          "name": "offerData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct BespokeTypes.TakeLendInfoForStrategy",
          "name": "takeInfo",
          "type": "tuple"
        }
      ],
      "name": "validate",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x688df60141d6ae8ff19734284631cbe7a7cc7731063859b0da644bb15083334f",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0x84a9c8bdaf3A8bBBA95500fB8a28871b0eC422B2",
    "transactionIndex": 90,
    "gasUsed": "366047",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x45c8327e9a0b9d2e6d97b29682fc0bce50ef590a92422469a48d2f661862c912",
    "transactionHash": "0x688df60141d6ae8ff19734284631cbe7a7cc7731063859b0da644bb15083334f",
    "logs": [],
    "blockNumber": 8098702,
    "cumulativeGasUsed": "21054237",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d098b2fcaa0d3900bd9713b45ea5b08d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isProrated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoConvertWhenRepay\",\"type\":\"bool\"},{\"internalType\":\"enum BespokeTypes.OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMax\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMin\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMax\",\"type\":\"uint40\"},{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonceMaxTimes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct BespokeTypes.Offer\",\"name\":\"offerData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct BespokeTypes.TakeLendInfoForStrategy\",\"name\":\"takeInfo\",\"type\":\"tuple\"}],\"name\":\"validate\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bespokemarket/offerStrategies/StrategyPrivate.sol\":\"StrategyPrivate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bespokemarket/libraries/BespokeTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary BespokeTypes {\\n    struct Offer {\\n        bool isProrated; // whether to pay interest a fixed-time when repay early\\n        bool autoConvertWhenRepay; // when currency!=lendAsset, whether to convert currency to lendAsset for lender when reapy\\n        OfferType offerType;\\n        address tokenAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address signer; //borrower or lender\\n        uint256 borrowAmountMin;\\n        uint256 borrowAmountMax;\\n        uint40 borrowDurationMin;\\n        uint40 borrowDurationMax;\\n        uint128 borrowRate;\\n        address currency;\\n        address lendAsset; // for a lend offer, using which oToken to lend; for a borrow offer, same as currency\\n        uint256 nonce;\\n        uint256 nonceMaxTimes;\\n        uint256 deadline;\\n        address strategy; // used for lend offer\\n        bytes params;\\n        uint8 v; // v: parameter (27 or 28)\\n        bytes32 r; // r: parameter\\n        bytes32 s; // s: parameter\\n    }\\n\\n    struct LoanData {\\n        address tokenAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address nftManager;\\n        address borrower;\\n        address lender;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        address currency;\\n        address lendAsset;\\n        uint256 reserveFactor;\\n        uint256 overdueLoanFeeFactor;\\n        uint40 borrowDuration;\\n        uint40 borrowBegin;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        bool isProrated;\\n        bool autoConvertWhenRepay;\\n        LoanStatus status;\\n    }\\n\\n    enum OfferType {\\n        BORROW, // borrow offer\\n        LEND // lend offer\\n    }\\n\\n    struct TakeBorrowInfo {\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n    }\\n\\n    struct TakeLendInfo {\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n        uint256 tokenId;\\n        address onBehalfOf;\\n        bytes params;\\n    }\\n\\n    // params for lend strategy\\n    struct TakeLendInfoForStrategy {\\n        address taker;\\n        uint256 tokenId;\\n        bytes params;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        OVERDUE,\\n        LIQUIDATABLE\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 overdueDuration;\\n    }\\n\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    struct NonceInfo {\\n        bool invalid;\\n        uint256 usedTimes;\\n        bytes32 offerHash;\\n    }\\n}\\n\",\"keccak256\":\"0x6663847bac654c215f57c43414bed03ec949eb61d8c9e88acd7109ba07094113\",\"license\":\"MIT\"},\"contracts/bespokemarket/offerStrategies/StrategyPrivate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport '../libraries/BespokeTypes.sol';\\n\\ncontract StrategyPrivate {\\n    function validate(BespokeTypes.Offer memory offerData, BespokeTypes.TakeLendInfoForStrategy memory takeInfo)\\n        external\\n        view\\n    {\\n        address targetBorrower = abi.decode(offerData.params, (address));\\n\\n        require(offerData.nonceMaxTimes == 1, 'BM_STRATEGY_PRIVATE_NONCEMAXTIMES_INVALID');\\n\\n        require(offerData.tokenId == takeInfo.tokenId, 'BM_STRATEGY_PRIVATE_TOKEN_ID_NOT_MATCH');\\n\\n        require(targetBorrower == takeInfo.taker, 'BM_STRATEGY_PRIVATE_ACCOUNT_NOT_MATCH');\\n    }\\n}\\n\",\"keccak256\":\"0xfb6489b2d7ebd693183db95e22c974c58b62352ecf684d906565269f397d565c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105a8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063169b8d6714610030575b600080fd5b61004361003e366004610382565b610045565b005b6000826102400151806020019051810190610060919061054e565b9050826101e001516001146100ce5760405162461bcd60e51b815260206004820152602960248201527f424d5f53545241544547595f505249564154455f4e4f4e43454d415854494d4560448201526814d7d253959053125160ba1b60648201526084015b60405180910390fd5b81602001518360800151146101345760405162461bcd60e51b815260206004820152602660248201527f424d5f53545241544547595f505249564154455f544f4b454e5f49445f4e4f546044820152650be9a82a886960d31b60648201526084016100c5565b81516001600160a01b0382811691161461019e5760405162461bcd60e51b815260206004820152602560248201527f424d5f53545241544547595f505249564154455f4143434f554e545f4e4f545f60448201526409a82a886960db1b60648201526084016100c5565b505050565b634e487b7160e01b600052604160045260246000fd5b6040516102c0810167ffffffffffffffff811182821017156101dd576101dd6101a3565b60405290565b803580151581146101f357600080fd5b919050565b8035600281106101f357600080fd5b6001600160a01b038116811461021c57600080fd5b50565b80356101f381610207565b803564ffffffffff811681146101f357600080fd5b80356fffffffffffffffffffffffffffffffff811681146101f357600080fd5b600082601f83011261027057600080fd5b813567ffffffffffffffff8082111561028b5761028b6101a3565b604051601f8301601f19908116603f011681019082821181831017156102b3576102b36101a3565b816040528381528660208588010111156102cc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146101f357600080fd5b60006060828403121561030f57600080fd5b6040516060810167ffffffffffffffff8282108183111715610333576103336101a3565b816040528293508435915061034782610207565b81835260208501356020840152604085013591508082111561036857600080fd5b506103758582860161025f565b6040830152505092915050565b6000806040838503121561039557600080fd5b823567ffffffffffffffff808211156103ad57600080fd5b908401906102c082870312156103c257600080fd5b6103ca6101b9565b6103d3836101e3565b81526103e1602084016101e3565b60208201526103f2604084016101f8565b60408201526104036060840161021f565b60608201526080830135608082015260a083013560a082015261042860c0840161021f565b60c082015260e083013560e082015261010080840135818301525061012061045181850161022a565b9082015261014061046384820161022a565b9082015261016061047584820161023f565b9082015261018061048784820161021f565b908201526101a061049984820161021f565b908201526101c083810135908201526101e0808401359082015261020080840135908201526102206104cc81850161021f565b9082015261024083810135838111156104e457600080fd5b6104f08982870161025f565b8284015250506102606105048185016102ec565b9082015261028083810135908201526102a092830135928101929092529092506020840135908082111561053757600080fd5b50610544858286016102fd565b9150509250929050565b60006020828403121561056057600080fd5b815161056b81610207565b939250505056fea26469706673582212203254c81a53c3aae3f949156d9a8a2624e103b92d7607378aa0316e0922f72e1664736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063169b8d6714610030575b600080fd5b61004361003e366004610382565b610045565b005b6000826102400151806020019051810190610060919061054e565b9050826101e001516001146100ce5760405162461bcd60e51b815260206004820152602960248201527f424d5f53545241544547595f505249564154455f4e4f4e43454d415854494d4560448201526814d7d253959053125160ba1b60648201526084015b60405180910390fd5b81602001518360800151146101345760405162461bcd60e51b815260206004820152602660248201527f424d5f53545241544547595f505249564154455f544f4b454e5f49445f4e4f546044820152650be9a82a886960d31b60648201526084016100c5565b81516001600160a01b0382811691161461019e5760405162461bcd60e51b815260206004820152602560248201527f424d5f53545241544547595f505249564154455f4143434f554e545f4e4f545f60448201526409a82a886960db1b60648201526084016100c5565b505050565b634e487b7160e01b600052604160045260246000fd5b6040516102c0810167ffffffffffffffff811182821017156101dd576101dd6101a3565b60405290565b803580151581146101f357600080fd5b919050565b8035600281106101f357600080fd5b6001600160a01b038116811461021c57600080fd5b50565b80356101f381610207565b803564ffffffffff811681146101f357600080fd5b80356fffffffffffffffffffffffffffffffff811681146101f357600080fd5b600082601f83011261027057600080fd5b813567ffffffffffffffff8082111561028b5761028b6101a3565b604051601f8301601f19908116603f011681019082821181831017156102b3576102b36101a3565b816040528381528660208588010111156102cc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff811681146101f357600080fd5b60006060828403121561030f57600080fd5b6040516060810167ffffffffffffffff8282108183111715610333576103336101a3565b816040528293508435915061034782610207565b81835260208501356020840152604085013591508082111561036857600080fd5b506103758582860161025f565b6040830152505092915050565b6000806040838503121561039557600080fd5b823567ffffffffffffffff808211156103ad57600080fd5b908401906102c082870312156103c257600080fd5b6103ca6101b9565b6103d3836101e3565b81526103e1602084016101e3565b60208201526103f2604084016101f8565b60408201526104036060840161021f565b60608201526080830135608082015260a083013560a082015261042860c0840161021f565b60c082015260e083013560e082015261010080840135818301525061012061045181850161022a565b9082015261014061046384820161022a565b9082015261016061047584820161023f565b9082015261018061048784820161021f565b908201526101a061049984820161021f565b908201526101c083810135908201526101e0808401359082015261020080840135908201526102206104cc81850161021f565b9082015261024083810135838111156104e457600080fd5b6104f08982870161025f565b8284015250506102606105048185016102ec565b9082015261028083810135908201526102a092830135928101929092529092506020840135908082111561053757600080fd5b50610544858286016102fd565b9150509250929050565b60006020828403121561056057600080fd5b815161056b81610207565b939250505056fea26469706673582212203254c81a53c3aae3f949156d9a8a2624e103b92d7607378aa0316e0922f72e1664736f6c634300080a0033",
  "libraries": {
    "BespokeTypes": "0x12A7b08B9a6e74f9D15dd38a1e5A74583B63c824"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}