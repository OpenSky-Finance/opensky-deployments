{
  "address": "0xF45F13775d9ac02073ea66A9FDB69ab4C392f768",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "isProrated",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "reserveId",
              "type": "uint256"
            },
            {
              "internalType": "enum BespokeTypes.OfferType",
              "name": "offerType",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMin",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "borrowAmountMax",
              "type": "uint256"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMin",
              "type": "uint40"
            },
            {
              "internalType": "uint40",
              "name": "borrowDurationMax",
              "type": "uint40"
            },
            {
              "internalType": "uint128",
              "name": "borrowRate",
              "type": "uint128"
            },
            {
              "internalType": "address",
              "name": "currency",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct BespokeTypes.Offer",
          "name": "offerData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "taker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "params",
              "type": "bytes"
            }
          ],
          "internalType": "struct BespokeTypes.LendOfferTakeParams",
          "name": "takeInfo",
          "type": "tuple"
        }
      ],
      "name": "tokenIdMatchOffer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8a3ce4b9d90ca6465c15d1ef0aea4f21a5c69b95fc213a3bb7a63f94abbd00f1",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0xF45F13775d9ac02073ea66A9FDB69ab4C392f768",
    "transactionIndex": 101,
    "gasUsed": "310965",
    "logsBloom": "0x
    "blockHash": "0xd183edd05e3ef62ffd321d5783b89c6419a8fedd7d17e47bf6a25c449b2a7619",
    "transactionHash": "0x8a3ce4b9d90ca6465c15d1ef0aea4f21a5c69b95fc213a3bb7a63f94abbd00f1",
    "logs": [],
    "blockNumber": 7985307,
    "cumulativeGasUsed": "14728548",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "52db335744ccba4923b671cf9bf608b9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isProrated\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"reserveId\",\"type\":\"uint256\"},{\"internalType\":\"enum BespokeTypes.OfferType\",\"name\":\"offerType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmountMax\",\"type\":\"uint256\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMin\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"borrowDurationMax\",\"type\":\"uint40\"},{\"internalType\":\"uint128\",\"name\":\"borrowRate\",\"type\":\"uint128\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct BespokeTypes.Offer\",\"name\":\"offerData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"internalType\":\"struct BespokeTypes.LendOfferTakeParams\",\"name\":\"takeInfo\",\"type\":\"tuple\"}],\"name\":\"tokenIdMatchOffer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/bespokemarket/offerStrategies/StrategyPrivate.sol\":\"StrategyPrivate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/bespokemarket/libraries/BespokeTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary BespokeTypes {\\n    struct Offer {\\n        bool isProrated;\\n        uint256 reserveId;\\n        OfferType offerType;// move offerType field here so solve encode/decode issue\\n        address nftAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address signer; //borrower or lender\\n        uint256 borrowAmountMin;\\n        uint256 borrowAmountMax;\\n        uint40 borrowDurationMin;\\n        uint40 borrowDurationMax;\\n        uint128 borrowRate;\\n        address currency;\\n        uint256 nonce;\\n        uint256 deadline;\\n        address strategy;\\n        bytes params;\\n        uint8 v; // v: parameter (27 or 28)\\n        bytes32 r; // r: parameter\\n        bytes32 s; // s: parameter\\n    }\\n    \\n    enum OfferType {\\n        BORROW, // borrow offer\\n        SINGLE, // single\\n        COLLECTION, // offer to collection\\n        MULTIPLE, // many. only for ERC721\\n        ATTRIBUTE, // by attribute\\n        PRIVATE // private\\n    }\\n\\n    // params for takeLendOffer\\n    struct LendOfferTakeParams {\\n        address taker;\\n        uint256 tokenId;\\n        bytes params;\\n    }\\n\\n    struct validateTakeLendOfferParams {\\n        bytes32 offerHash;\\n        address underlyingSpecified;\\n        uint256 borrowAmount;\\n        uint256 borrowDuration;\\n        bytes32 domainSeparator;\\n        address bespokeSettings;\\n        address settings;\\n    }\\n\\n    struct executeTakeLendParams {\\n        uint256 tokenId;\\n        uint256 borrowAmount; // new borrow amount\\n        uint256 borrowDuration; // new borrow duration\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n//        bytes32 offerHash;\\n        bytes params;\\n    }\\n\\n    struct executeTakeBorrowParams {\\n        uint256 amount;\\n        uint256 duration;\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n        bytes32 offerHash;\\n    }\\n\\n    // repayAmount?\\n    // adminFee\\n    struct LoanData {\\n        uint256 reserveId;\\n        address nftAddress;\\n        uint256 tokenId;\\n        uint256 tokenAmount; // 1 for ERC721, 1+ for ERC1155\\n        address nftManager;\\n        address borrower;\\n        address lender;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        address currency;\\n        uint40 borrowDuration;\\n        uint40 borrowBegin;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        bool isProrated;\\n        LoanStatus status;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        OVERDUE,\\n        LIQUIDATABLE\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 overdueDuration;\\n    }\\n\\n    struct executeRolloverParams {\\n        uint256 loanId;\\n        uint256 borrowAmount; // new borrow amount\\n        uint256 borrowDuration; // new borrow duration\\n        address bespokeSettings;\\n        address settings;\\n        bytes32 domainSeparator;\\n        bytes32 offerHash;\\n    }\\n\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n}\\n\",\"keccak256\":\"0x3c719113ba55e49e038a483a3617905adc689355a3216dee18f5bb598ed4129e\",\"license\":\"MIT\"},\"contracts/bespokemarket/offerStrategies/StrategyPrivate.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport '../libraries/BespokeTypes.sol';\\n\\ncontract StrategyPrivate {\\n    function tokenIdMatchOffer(BespokeTypes.Offer memory offerData, BespokeTypes.LendOfferTakeParams memory takeInfo)\\n        external\\n        view\\n        returns (bool)\\n    {\\n        if (offerData.offerType != BespokeTypes.OfferType.PRIVATE) return false;\\n\\n        address targetBorrower = abi.decode(offerData.params, (address));\\n\\n        return targetBorrower == takeInfo.taker;\\n    }\\n}\\n\",\"keccak256\":\"0xfe84a57ccb8e6cdb32606c0149f023027583425e1811e1f280db00e49527f4cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104aa806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806322ebecd314610030575b600080fd5b61004361003e366004610292565b610057565b604051901515815260200160405180910390f35b60006005836040015160058111156100715761007161043a565b1461007e575060006100ad565b60008361020001518060200190518101906100999190610450565b83516001600160a01b039182169116149150505b92915050565b634e487b7160e01b600052604160045260246000fd5b604051610280810167ffffffffffffffff811182821017156100ed576100ed6100b3565b60405290565b8035801515811461010357600080fd5b919050565b80356006811061010357600080fd5b6001600160a01b038116811461012c57600080fd5b50565b803561010381610117565b803564ffffffffff8116811461010357600080fd5b80356fffffffffffffffffffffffffffffffff8116811461010357600080fd5b600082601f83011261018057600080fd5b813567ffffffffffffffff8082111561019b5761019b6100b3565b604051601f8301601f19908116603f011681019082821181831017156101c3576101c36100b3565b816040528381528660208588010111156101dc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461010357600080fd5b60006060828403121561021f57600080fd5b6040516060810167ffffffffffffffff8282108183111715610243576102436100b3565b816040528293508435915061025782610117565b81835260208501356020840152604085013591508082111561027857600080fd5b506102858582860161016f565b6040830152505092915050565b600080604083850312156102a557600080fd5b823567ffffffffffffffff808211156102bd57600080fd5b9084019061028082870312156102d257600080fd5b6102da6100c9565b6102e3836100f3565b8152602083013560208201526102fb60408401610108565b604082015261030c6060840161012f565b60608201526080830135608082015260a083013560a082015261033160c0840161012f565b60c082015260e083013560e082015261010080840135818301525061012061035a81850161013a565b9082015261014061036c84820161013a565b9082015261016061037e84820161014f565b9082015261018061039084820161012f565b908201526101a083810135908201526101c080840135908201526101e06103b881850161012f565b9082015261020083810135838111156103d057600080fd5b6103dc8982870161016f565b8284015250506102206103f08185016101fc565b90820152610240838101359082015261026092830135928101929092529092506020840135908082111561042357600080fd5b506104308582860161020d565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561046257600080fd5b815161046d81610117565b939250505056fea2646970667358221220d3d2e4ea174200c39b18f8d1b14dd3a566b1a80c9329ddbf7708093dac04dac264736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806322ebecd314610030575b600080fd5b61004361003e366004610292565b610057565b604051901515815260200160405180910390f35b60006005836040015160058111156100715761007161043a565b1461007e575060006100ad565b60008361020001518060200190518101906100999190610450565b83516001600160a01b039182169116149150505b92915050565b634e487b7160e01b600052604160045260246000fd5b604051610280810167ffffffffffffffff811182821017156100ed576100ed6100b3565b60405290565b8035801515811461010357600080fd5b919050565b80356006811061010357600080fd5b6001600160a01b038116811461012c57600080fd5b50565b803561010381610117565b803564ffffffffff8116811461010357600080fd5b80356fffffffffffffffffffffffffffffffff8116811461010357600080fd5b600082601f83011261018057600080fd5b813567ffffffffffffffff8082111561019b5761019b6100b3565b604051601f8301601f19908116603f011681019082821181831017156101c3576101c36100b3565b816040528381528660208588010111156101dc57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461010357600080fd5b60006060828403121561021f57600080fd5b6040516060810167ffffffffffffffff8282108183111715610243576102436100b3565b816040528293508435915061025782610117565b81835260208501356020840152604085013591508082111561027857600080fd5b506102858582860161016f565b6040830152505092915050565b600080604083850312156102a557600080fd5b823567ffffffffffffffff808211156102bd57600080fd5b9084019061028082870312156102d257600080fd5b6102da6100c9565b6102e3836100f3565b8152602083013560208201526102fb60408401610108565b604082015261030c6060840161012f565b60608201526080830135608082015260a083013560a082015261033160c0840161012f565b60c082015260e083013560e082015261010080840135818301525061012061035a81850161013a565b9082015261014061036c84820161013a565b9082015261016061037e84820161014f565b9082015261018061039084820161012f565b908201526101a083810135908201526101c080840135908201526101e06103b881850161012f565b9082015261020083810135838111156103d057600080fd5b6103dc8982870161016f565b8284015250506102206103f08185016101fc565b90820152610240838101359082015261026092830135928101929092529092506020840135908082111561042357600080fd5b506104308582860161020d565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b60006020828403121561046257600080fd5b815161046d81610117565b939250505056fea2646970667358221220d3d2e4ea174200c39b18f8d1b14dd3a566b1a80c9329ddbf7708093dac04dac264736f6c634300080a0033",
  "libraries": {
    "BespokeTypes": "0xA3f72EFE184A58706Ef2DeC6C6fbd6c58e8FDA20"
  },
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}