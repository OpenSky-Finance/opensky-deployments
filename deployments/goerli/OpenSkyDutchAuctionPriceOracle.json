{
  "address": "0x09B4d69982A6A0671e13420128509dF50114Dcd4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "priceTime",
          "type": "uint256"
        }
      ],
      "name": "calculatePrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "reservePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xfce998deeff9aba9cf4ce4e8e95384a2f36fb5c982e385d65f2f69ff7955311b",
  "receipt": {
    "to": null,
    "from": "0x218513C58A4781a5B88De6230caA29aBCe2Ccd75",
    "contractAddress": "0x09B4d69982A6A0671e13420128509dF50114Dcd4",
    "transactionIndex": 111,
    "gasUsed": "200767",
    "logsBloom": "0x
    "blockHash": "0xe4ae335c11ff1fceca472ac2d4ff0ffa8f1b7bf37c200db40215c0ab0e51a49b",
    "transactionHash": "0xfce998deeff9aba9cf4ce4e8e95384a2f36fb5c982e385d65f2f69ff7955311b",
    "logs": [],
    "blockNumber": 7855719,
    "cumulativeGasUsed": "24671264",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "5cd2f93d32687628fe2ee849fdf1411a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceTime\",\"type\":\"uint256\"}],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/liquidation/OpenSkyDutchAuctionPriceOracle.sol\":\"OpenSkyDutchAuctionPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IOpenSkyDutchAuctionPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IOpenSkyDutchAuctionPriceOracle {\\n    function getPrice(uint256 loanAmount, uint256 startTime) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe5a879b51065978413c4a37969fd04c890db5af071dae577737659416088a178\",\"license\":\"MIT\"},\"contracts/liquidation/OpenSkyDutchAuctionPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"../interfaces/IOpenSkyDutchAuctionPriceOracle.sol\\\";\\n\\ncontract OpenSkyDutchAuctionPriceOracle is IOpenSkyDutchAuctionPriceOracle {\\n    uint256 constant DURATION_ONE = 2 days;\\n    uint256 constant DURATION_TWO = 3 days;\\n    uint256 constant SPACING = 5 minutes; // price descend every 5 minutes\\n\\n    function calculatePrice(\\n        uint256 startPrice,\\n        uint256 endPrice,\\n        uint256 startTime,\\n        uint256 endTime,\\n        uint256 priceTime\\n    ) public pure returns (uint256) {\\n        uint256 spacingAmount = (endTime - startTime) / SPACING;\\n        uint256 priceUint = (startPrice - endPrice) / spacingAmount;\\n        uint256 currentIndex = (priceTime - startTime) / SPACING;\\n        uint256 price = startPrice - currentIndex * priceUint;\\n        return price;\\n    }\\n\\n    function getPrice(uint256 reservePrice, uint256 startTime) external view override returns (uint256) {\\n        // 10*loan => 3*loan=> 1.2*loan\\n        uint256 startPrice = reservePrice * 10;\\n        uint256 turningPrice = reservePrice * 3;\\n        uint256 endPrice = (reservePrice * 12000) / 10000;\\n        uint256 turnTime = startTime + DURATION_ONE;\\n        uint256 endTime = turnTime + DURATION_TWO;\\n\\n        uint256 price = endPrice;\\n\\n        if (block.timestamp <= startTime) {\\n            price = startPrice;\\n        } else if (block.timestamp <= turnTime) {\\n            // price = startPrice - ((block.timestamp - startTime) * (startPrice - turningPrice)) / DURATION_ONE;\\n            price = calculatePrice(startPrice, turningPrice, startTime, turnTime, block.timestamp);\\n        } else if (block.timestamp < endTime) {\\n            // price = turningPrice - ((block.timestamp - turnTime) * (turningPrice - endPrice)) / DURATION_TWO;\\n            price = calculatePrice(turningPrice, endPrice, turnTime, endTime, block.timestamp);\\n        } else {\\n            price = endPrice;\\n        }\\n        return price;\\n    }\\n}\\n\",\"keccak256\":\"0xa069f846756458411157e6062a464d50f7d43391909ecb584f7f74ffb2cc5fa7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102ac806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063207ad9ce1461003b5780635cf4ee9114610060575b600080fd5b61004e610049366004610193565b610073565b60405190815260200160405180910390f35b61004e61006e3660046101ce565b6100e7565b60008061012c6100838686610206565b61008d919061021d565b905060008161009c888a610206565b6100a6919061021d565b9050600061012c6100b78887610206565b6100c1919061021d565b905060006100cf838361023f565b6100d9908b610206565b9a9950505050505050505050565b6000806100f584600a61023f565b9050600061010485600361023f565b9050600061271061011787612ee061023f565b610121919061021d565b905060006101326202a3008761025e565b905060006101436203f4808361025e565b905082428810610154575084610187565b82421161016f5761016886868a8642610073565b9050610187565b81421015610184576101688585858542610073565b50825b98975050505050505050565b600080600080600060a086880312156101ab57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080604083850312156101e157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610218576102186101f0565b500390565b60008261023a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610259576102596101f0565b500290565b60008219821115610271576102716101f0565b50019056fea2646970667358221220b1a487cdf7728f18938e80f0076403e80898035a56240e47371e5ec258f8b93364736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063207ad9ce1461003b5780635cf4ee9114610060575b600080fd5b61004e610049366004610193565b610073565b60405190815260200160405180910390f35b61004e61006e3660046101ce565b6100e7565b60008061012c6100838686610206565b61008d919061021d565b905060008161009c888a610206565b6100a6919061021d565b9050600061012c6100b78887610206565b6100c1919061021d565b905060006100cf838361023f565b6100d9908b610206565b9a9950505050505050505050565b6000806100f584600a61023f565b9050600061010485600361023f565b9050600061271061011787612ee061023f565b610121919061021d565b905060006101326202a3008761025e565b905060006101436203f4808361025e565b905082428810610154575084610187565b82421161016f5761016886868a8642610073565b9050610187565b81421015610184576101688585858542610073565b50825b98975050505050505050565b600080600080600060a086880312156101ab57600080fd5b505083359560208501359550604085013594606081013594506080013592509050565b600080604083850312156101e157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610218576102186101f0565b500390565b60008261023a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610259576102596101f0565b500290565b60008219821115610271576102716101f0565b50019056fea2646970667358221220b1a487cdf7728f18938e80f0076403e80898035a56240e47371e5ec258f8b93364736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}