{
  "address": "0x94F8B07271a07D9123470a382D53b183bb2eC6bB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "daoVaultAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "uniswapRouterAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAsset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "Swapped",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DAO_VAULT_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SETTINGS",
      "outputs": [
        {
          "internalType": "contract IOpenSkySettings",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "UNISWAP_ROUTER",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "pullERC20FromDaoVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "rescueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetToSwapFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetToSwapTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountToSwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minAmountOut",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useEthPath",
          "type": "bool"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "assetToSwapFrom",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "assetToSwapTo",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmountToSwap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountToReceive",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "useEthPath",
          "type": "bool"
        }
      ],
      "name": "swapTokensForExactTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcc3fc1abd94a6f4eecb42a1dd7635f8e97710e65197342f7e3159e8ceb0f878a",
  "receipt": {
    "to": null,
    "from": "0x1a347f2aac8758E139C7401aEC878aD174C19c8a",
    "contractAddress": "0x94F8B07271a07D9123470a382D53b183bb2eC6bB",
    "transactionIndex": 150,
    "gasUsed": "1231912",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xffb5439b08e7c1526a0774373b0606975b83d8602eba1dd5c2179cfaf00f7f9f",
    "transactionHash": "0xcc3fc1abd94a6f4eecb42a1dd7635f8e97710e65197342f7e3159e8ceb0f878a",
    "logs": [],
    "blockNumber": 15408012,
    "cumulativeGasUsed": "13992463",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x72A780B33915D6D229E7b31A729AE42963A57c73",
    "0xbe6Da6c8DfD712C6A2c6A104f0ab05f8927c7198",
    "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
  ],
  "solcInputHash": "b8902a279cfadfe286f7c1ee8daea2c4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"daoVaultAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"uniswapRouterAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toAsset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAO_VAULT_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SETTINGS\",\"outputs\":[{\"internalType\":\"contract IOpenSkySettings\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"pullERC20FromDaoVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetToSwapFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToSwapTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountToSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountOut\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useEthPath\",\"type\":\"bool\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"assetToSwapFrom\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assetToSwapTo\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountToSwap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountToReceive\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"useEthPath\",\"type\":\"bool\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Provide swap services for OpenSkyDaoVault contract. - OpenSkyDaoVault should approve 'amount' of 'token' to this contract first - Receiver of swap is always OpenSkyDaoVault - Only callable by governance\",\"kind\":\"dev\",\"methods\":{\"rescueTokens(address)\":{\"details\":\"Emergency rescue for token stuck on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by governance*\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/vault/OpenSkyDaoVaultUniswapV2Adapter.sol\":\"OpenSkyDaoVaultUniswapV2Adapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/dependencies/uniswap-v2/IUniswapV2Router02.sol\":{\"content\":\"pragma solidity 0.8.10;\\n\\ninterface IUniswapV2Router02 {\\n    function swapExactTokensForTokens(\\n        uint256 amountIn,\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function swapExactETHForTokens(\\n        uint256 amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external payable returns (uint256[] memory amounts);\\n\\n    function swapTokensForExactTokens(\\n        uint256 amountOut,\\n        uint256 amountInMax,\\n        address[] calldata path,\\n        address to,\\n        uint256 deadline\\n    ) external returns (uint256[] memory amounts);\\n\\n    function getAmountsOut(uint256 amountIn, address[] calldata path) external view returns (uint256[] memory amounts);\\n\\n    function getAmountsIn(uint256 amountOut, address[] calldata path) external view returns (uint256[] memory amounts);\\n}\\n\",\"keccak256\":\"0x9e8e71a1ec1e1a22a514b6b9d1fe29518984c1be79b0d5228df92f2de76026f8\"},\"contracts/interfaces/IACLManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IACLManager {\\n    function addEmergencyAdmin(address admin) external;\\n    \\n    function isEmergencyAdmin(address admin) external view returns (bool);\\n    \\n    function removeEmergencyAdmin(address admin) external;\\n    \\n    function addGovernance(address admin) external;\\n    \\n    function isGovernance(address admin) external view returns (bool);\\n\\n    function removeGovernance(address admin) external;\\n\\n    function addPoolAdmin(address admin) external;\\n\\n    function isPoolAdmin(address admin) external view returns (bool);\\n\\n    function removePoolAdmin(address admin) external;\\n\\n    function addLiquidationOperator(address address_) external;\\n\\n    function isLiquidationOperator(address address_) external view returns (bool);\\n\\n    function removeLiquidationOperator(address address_) external;\\n\\n    function addAirdropOperator(address address_) external;\\n\\n    function isAirdropOperator(address address_) external view returns (bool);\\n\\n    function removeAirdropOperator(address address_) external;\\n}\\n\",\"keccak256\":\"0x0e77d3bdc88ba10cd78a9a80350bbf0d4120a1d0ac7c7911bef8c8cb389cf42f\",\"license\":\"MIT\"},\"contracts/interfaces/IOpenSkyDaoVaultUniswapV2Adapter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\ninterface IOpenSkyDaoVaultUniswapV2Adapter {\\n    event Swapped(address fromAsset, address toAsset, uint256 fromAmount, uint256 receivedAmount);\\n\\n    function pullERC20FromDaoVault(address token, uint256 amount) external;\\n\\n    function swapExactTokensForTokens(\\n        address assetToSwapFrom,\\n        address assetToSwapTo,\\n        uint256 amountToSwap,\\n        uint256 minAmountOut,\\n        bool useEthPath\\n    ) external returns (uint256);\\n\\n    function swapTokensForExactTokens(\\n        address assetToSwapFrom,\\n        address assetToSwapTo,\\n        uint256 maxAmountToSwap,\\n        uint256 amountToReceive,\\n        bool useEthPath\\n    ) external returns (uint256);\\n}\\n\",\"keccak256\":\"0xeea146b3e5be75083fca723297bc7f7f5a484a47684f25fe3cb9ee90a0191250\",\"license\":\"MIT\"},\"contracts/interfaces/IOpenSkySettings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\nimport '../libraries/types/DataTypes.sol';\\n\\ninterface IOpenSkySettings {\\n    event InitPoolAddress(address operator, address address_);\\n    event InitLoanAddress(address operator, address address_);\\n    event InitVaultFactoryAddress(address operator, address address_);\\n    event InitIncentiveControllerAddress(address operator, address address_);\\n    event InitWETHGatewayAddress(address operator, address address_);\\n    event InitPunkGatewayAddress(address operator, address address_);\\n    event InitDaoVaultAddress(address operator, address address_);\\n\\n    event AddToWhitelist(address operator, uint256 reserveId, address nft);\\n    event RemoveFromWhitelist(address operator, uint256 reserveId, address nft);\\n    event SetReserveFactor(address operator, uint256 factor);\\n    event SetPrepaymentFeeFactor(address operator, uint256 factor);\\n    event SetOverdueLoanFeeFactor(address operator, uint256 factor);\\n    event SetMoneyMarketAddress(address operator, address address_);\\n    event SetTreasuryAddress(address operator, address address_);\\n    event SetACLManagerAddress(address operator, address address_);\\n    event SetLoanDescriptorAddress(address operator, address address_);\\n    event SetNftPriceOracleAddress(address operator, address address_);\\n    event SetInterestRateStrategyAddress(address operator, address address_);\\n    event AddLiquidator(address operator, address address_);\\n    event RemoveLiquidator(address operator, address address_);\\n\\n    function poolAddress() external view returns (address);\\n\\n    function loanAddress() external view returns (address);\\n\\n    function vaultFactoryAddress() external view returns (address);\\n\\n    function incentiveControllerAddress() external view returns (address);\\n\\n    function wethGatewayAddress() external view returns (address);\\n\\n    function punkGatewayAddress() external view returns (address);\\n\\n    function inWhitelist(uint256 reserveId, address nft) external view returns (bool);\\n\\n    function getWhitelistDetail(uint256 reserveId, address nft) external view returns (DataTypes.WhitelistInfo memory);\\n\\n    function reserveFactor() external view returns (uint256); // treasury ratio\\n\\n    function MAX_RESERVE_FACTOR() external view returns (uint256);\\n\\n    function prepaymentFeeFactor() external view returns (uint256);\\n\\n    function overdueLoanFeeFactor() external view returns (uint256);\\n\\n    function moneyMarketAddress() external view returns (address);\\n\\n    function treasuryAddress() external view returns (address);\\n\\n    function daoVaultAddress() external view returns (address);\\n\\n    function ACLManagerAddress() external view returns (address);\\n\\n    function loanDescriptorAddress() external view returns (address);\\n\\n    function nftPriceOracleAddress() external view returns (address);\\n\\n    function interestRateStrategyAddress() external view returns (address);\\n    \\n    function isLiquidator(address liquidator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xd5c1c2468464891b3ce379c8a03bc21c2c67fcf0c7493e3b35fd573fa21ea448\",\"license\":\"MIT\"},\"contracts/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nlibrary DataTypes {\\n    struct ReserveData {\\n        uint256 reserveId;\\n        address underlyingAsset;\\n        address oTokenAddress;\\n        address moneyMarketAddress;\\n        uint128 lastSupplyIndex;\\n        uint256 borrowingInterestPerSecond;\\n        uint256 lastMoneyMarketBalance;\\n        uint40 lastUpdateTimestamp;\\n        uint256 totalBorrows;\\n        address interestModelAddress;\\n        uint256 treasuryFactor;\\n        bool isMoneyMarketOn;\\n    }\\n\\n    struct LoanData {\\n        uint256 reserveId;\\n        address nftAddress;\\n        uint256 tokenId;\\n        address borrower;\\n        uint256 amount;\\n        uint128 borrowRate;\\n        uint128 interestPerSecond;\\n        uint40 borrowBegin;\\n        uint40 borrowDuration;\\n        uint40 borrowOverdueTime;\\n        uint40 liquidatableTime;\\n        uint40 extendableTime;\\n        uint40 borrowEnd;\\n        LoanStatus status;\\n    }\\n\\n    enum LoanStatus {\\n        NONE,\\n        BORROWING,\\n        EXTENDABLE,\\n        OVERDUE,\\n        LIQUIDATABLE,\\n        LIQUIDATING\\n    }\\n\\n    struct WhitelistInfo {\\n        bool enabled;\\n        string name;\\n        string symbol;\\n        uint256 LTV;\\n        uint256 minBorrowDuration;\\n        uint256 maxBorrowDuration;\\n        uint256 extendableDuration;\\n        uint256 overdueDuration;\\n    }\\n}\\n\",\"keccak256\":\"0x487cd1dedb3146da46144bc8f0e5b970c5173efa8c19700184b8207c1ee3fc55\",\"license\":\"MIT\"},\"contracts/vault/OpenSkyDaoVaultUniswapV2Adapter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\nimport '@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol';\\nimport '@openzeppelin/contracts/utils/Context.sol';\\n\\nimport '../dependencies/uniswap-v2/IUniswapV2Router02.sol';\\nimport '../interfaces/IOpenSkySettings.sol';\\nimport '../interfaces/IACLManager.sol';\\n\\nimport '../interfaces/IOpenSkyDaoVaultUniswapV2Adapter.sol';\\n\\n/**\\n * @dev Provide swap services for OpenSkyDaoVault contract.\\n * - OpenSkyDaoVault should approve 'amount' of 'token' to this contract first\\n * - Receiver of swap is always OpenSkyDaoVault\\n * - Only callable by governance\\n */\\ncontract OpenSkyDaoVaultUniswapV2Adapter is Context, IOpenSkyDaoVaultUniswapV2Adapter {\\n    using SafeERC20 for IERC20;\\n\\n    IOpenSkySettings public immutable SETTINGS;\\n    address public immutable WETH_ADDRESS;\\n    address public immutable DAO_VAULT_ADDRESS;\\n    IUniswapV2Router02 public immutable UNISWAP_ROUTER;\\n\\n    modifier onlyGovernance() {\\n        IACLManager ACLManager = IACLManager(SETTINGS.ACLManagerAddress());\\n        require(ACLManager.isGovernance(_msgSender()), 'ACL_ONLY_GOVERNANCE_CAN_CALL');\\n        _;\\n    }\\n\\n    constructor(\\n        address settingsAddress,\\n        address daoVaultAddress,\\n        address uniswapRouterAddress,\\n        address wethAddress\\n    ) {\\n        SETTINGS = IOpenSkySettings(settingsAddress);\\n        DAO_VAULT_ADDRESS = daoVaultAddress;\\n        UNISWAP_ROUTER = IUniswapV2Router02(uniswapRouterAddress);\\n        WETH_ADDRESS = wethAddress;\\n    }\\n\\n    function pullERC20FromDaoVault(address token, uint256 amount) public onlyGovernance {\\n        IERC20(token).safeTransferFrom(DAO_VAULT_ADDRESS, address(this), amount);\\n    }\\n\\n    function swapExactTokensForTokens(\\n        address assetToSwapFrom,\\n        address assetToSwapTo,\\n        uint256 amountToSwap,\\n        uint256 minAmountOut,\\n        bool useEthPath\\n    ) external onlyGovernance returns (uint256) {\\n        // step1: pull asset\\n        pullERC20FromDaoVault(assetToSwapFrom, amountToSwap);\\n\\n        // step2: approve\\n        IERC20(assetToSwapFrom).safeApprove(address(UNISWAP_ROUTER), 0);\\n        IERC20(assetToSwapFrom).safeApprove(address(UNISWAP_ROUTER), amountToSwap);\\n\\n        // step3: swap\\n        address[] memory path;\\n        if (useEthPath) {\\n            path = new address[](3);\\n            path[0] = assetToSwapFrom;\\n            path[1] = WETH_ADDRESS;\\n            path[2] = assetToSwapTo;\\n        } else {\\n            path = new address[](2);\\n            path[0] = assetToSwapFrom;\\n            path[1] = assetToSwapTo;\\n        }\\n\\n        uint256[] memory amounts = UNISWAP_ROUTER.swapExactTokensForTokens(\\n            amountToSwap,\\n            minAmountOut,\\n            path,\\n            DAO_VAULT_ADDRESS,\\n            block.timestamp\\n        );\\n\\n        emit Swapped(assetToSwapFrom, assetToSwapTo, amounts[0], amounts[amounts.length - 1]);\\n\\n        return amounts[amounts.length - 1];\\n    }\\n\\n    function swapTokensForExactTokens(\\n        address assetToSwapFrom,\\n        address assetToSwapTo,\\n        uint256 maxAmountToSwap,\\n        uint256 amountToReceive,\\n        bool useEthPath\\n    ) external onlyGovernance returns (uint256) {\\n        // step1 pull asset\\n        pullERC20FromDaoVault(assetToSwapFrom, maxAmountToSwap);\\n\\n        // step2: approve\\n        IERC20(assetToSwapFrom).safeApprove(address(UNISWAP_ROUTER), 0);\\n        IERC20(assetToSwapFrom).safeApprove(address(UNISWAP_ROUTER), maxAmountToSwap);\\n\\n        // step3: swap\\n        address[] memory path;\\n        if (useEthPath) {\\n            path = new address[](3);\\n            path[0] = assetToSwapFrom;\\n            path[1] = WETH_ADDRESS;\\n            path[2] = assetToSwapTo;\\n        } else {\\n            path = new address[](2);\\n            path[0] = assetToSwapFrom;\\n            path[1] = assetToSwapTo;\\n        }\\n\\n        uint256[] memory amounts = UNISWAP_ROUTER.swapTokensForExactTokens(\\n            amountToReceive,\\n            maxAmountToSwap,\\n            path,\\n            DAO_VAULT_ADDRESS,\\n            block.timestamp\\n        );\\n\\n        emit Swapped(assetToSwapFrom, assetToSwapTo, amounts[0], amounts[amounts.length - 1]);\\n\\n        return amounts[0];\\n    }\\n\\n    /**\\n     * @dev Emergency rescue for token stuck on this contract, as failsafe mechanism\\n     * - Funds should never remain in this contract more time than during transactions\\n     * - Only callable by governance\\n     **/\\n    function rescueTokens(IERC20 token) external onlyGovernance {\\n        token.safeTransfer(DAO_VAULT_ADDRESS, token.balanceOf(address(this)));\\n    }\\n}\\n\",\"keccak256\":\"0x6b8dd6cc0e9812dfe41b1c454ceeb72df21656e6c10b1b679629eb168e4c8e98\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6101006040523480156200001257600080fd5b50604051620016cd380380620016cd833981016040819052620000359162000075565b6001600160a01b0393841660805291831660c052821660e0521660a052620000d2565b80516001600160a01b03811681146200007057600080fd5b919050565b600080600080608085870312156200008c57600080fd5b620000978562000058565b9350620000a76020860162000058565b9250620000b76040860162000058565b9150620000c76060860162000058565b905092959194509250565b60805160a05160c05160e0516115526200017b6000396000818161017f0152818161049b015281816104d00152818161068201528181610a8601528181610abb0152610c6d01526000818161011e015281816102dd015281816106b5015281816109270152610ca001526000818160a6015281816105540152610b3f015260008181610158015281816101a50152818161036c01528181610802015261095701526115526000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806366eecc5d1161005b57806366eecc5d14610119578063820c72a814610140578063ade97ab514610153578063d82649201461017a57600080fd5b8062ae3bf81461008c578063040141e5146100a157806345b9e7a8146100e55780635b74fc6d14610106575b600080fd5b61009f61009a3660046111e1565b6101a1565b005b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f86100f336600461120c565b610367565b6040519081526020016100dc565b61009f61011436600461126b565b6107fe565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6100f861014e36600461120c565b610952565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f91906112b4565b6102c45760405162461bcd60e51b81526004016102bb906112d1565b60405180910390fd5b6040516370a0823160e01b8152306004820152610363907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190611308565b6001600160a01b0385169190610dc7565b5050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046691906112b4565b6104825760405162461bcd60e51b81526004016102bb906112d1565b61048c87866107fe565b6104c16001600160a01b0388167f00000000000000000000000000000000000000000000000000000000000000006000610e2a565b6104f56001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610e2a565b606083156105df57604080516003808252608082019092529060208201606080368337019050509050878160008151811061053257610532611337565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061058657610586611337565b60200260200101906001600160a01b031690816001600160a01b03168152505086816002815181106105ba576105ba611337565b60200260200101906001600160a01b031690816001600160a01b031681525050610668565b6040805160028082526060820183529091602083019080368337019050509050878160008151811061061357610613611337565b60200260200101906001600160a01b031690816001600160a01b031681525050868160018151811061064757610647611337565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed1739906106df908a908a9087907f000000000000000000000000000000000000000000000000000000000000000090429060040161134d565b6000604051808303816000875af11580156106fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072691908101906113be565b90507fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb89898360008151811061075e5761075e611337565b60200260200101518460018651610775919061147c565b8151811061078557610785611337565b60200260200101516040516107c194939291906001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60405180910390a180600182516107d8919061147c565b815181106107e8576107e8611337565b6020026020010151935050505095945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc91906112b4565b6109185760405162461bcd60e51b81526004016102bb906112d1565b61094d6001600160a01b0384167f00000000000000000000000000000000000000000000000000000000000000003085610f3f565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5191906112b4565b610a6d5760405162461bcd60e51b81526004016102bb906112d1565b610a7787866107fe565b610aac6001600160a01b0388167f00000000000000000000000000000000000000000000000000000000000000006000610e2a565b610ae06001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610e2a565b60608315610bca576040805160038082526080820190925290602082016060803683370190505090508781600081518110610b1d57610b1d611337565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610b7157610b71611337565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600281518110610ba557610ba5611337565b60200260200101906001600160a01b031690816001600160a01b031681525050610c53565b60408051600280825260608201835290916020830190803683370190505090508781600081518110610bfe57610bfe611337565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610c3257610c32611337565b60200260200101906001600160a01b031690816001600160a01b0316815250505b604051634401edf760e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638803dbee90610cca9089908b9087907f000000000000000000000000000000000000000000000000000000000000000090429060040161134d565b6000604051808303816000875af1158015610ce9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1191908101906113be565b90507fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb898983600081518110610d4957610d49611337565b60200260200101518460018651610d60919061147c565b81518110610d7057610d70611337565b6020026020010151604051610dac94939291906001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60405180910390a1806000815181106107e8576107e8611337565b6040516001600160a01b03831660248201526044810182905261094d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f7d565b801580610ea45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190611308565b155b610f0f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016102bb565b6040516001600160a01b03831660248201526044810182905261094d90849063095ea7b360e01b90606401610df3565b6040516001600160a01b0380851660248301528316604482015260648101829052610f779085906323b872dd60e01b90608401610df3565b50505050565b6000610fd2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661104f9092919063ffffffff16565b80519091501561094d5780806020019051810190610ff091906112b4565b61094d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b606061105e8484600085611068565b90505b9392505050565b6060824710156110c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102bb565b843b6111175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b600080866001600160a01b0316858760405161113391906114cd565b60006040518083038185875af1925050503d8060008114611170576040519150601f19603f3d011682016040523d82523d6000602084013e611175565b606091505b5091509150611185828286611190565b979650505050505050565b6060831561119f575081611061565b8251156111af5782518084602001fd5b8160405162461bcd60e51b81526004016102bb91906114e9565b6001600160a01b03811681146111de57600080fd5b50565b6000602082840312156111f357600080fd5b8135611061816111c9565b80151581146111de57600080fd5b600080600080600060a0868803121561122457600080fd5b853561122f816111c9565b9450602086013561123f816111c9565b93506040860135925060608601359150608086013561125d816111fe565b809150509295509295909350565b6000806040838503121561127e57600080fd5b8235611289816111c9565b946020939093013593505050565b6000602082840312156112a957600080fd5b8151611061816111c9565b6000602082840312156112c657600080fd5b8151611061816111fe565b6020808252601c908201527f41434c5f4f4e4c595f474f5645524e414e43455f43414e5f43414c4c00000000604082015260600190565b60006020828403121561131a57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561139d5784516001600160a01b031683529383019391830191600101611378565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156113d157600080fd5b825167ffffffffffffffff808211156113e957600080fd5b818501915085601f8301126113fd57600080fd5b81518181111561140f5761140f611321565b8060051b604051601f19603f8301168101818110858211171561143457611434611321565b60405291825284820192508381018501918883111561145257600080fd5b938501935b8285101561147057845184529385019392850192611457565b98975050505050505050565b60008282101561149c57634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156114bc5781810151838201526020016114a4565b83811115610f775750506000910152565b600082516114df8184602087016114a1565b9190910192915050565b60208152600082518060208401526115088160408501602087016114a1565b601f01601f1916919091016040019291505056fea2646970667358221220f8c42588608388182504f58dbb03b207e8711eacf0750495924a17cca890e6e064736f6c634300080a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100875760003560e01c806366eecc5d1161005b57806366eecc5d14610119578063820c72a814610140578063ade97ab514610153578063d82649201461017a57600080fd5b8062ae3bf81461008c578063040141e5146100a157806345b9e7a8146100e55780635b74fc6d14610106575b600080fd5b61009f61009a3660046111e1565b6101a1565b005b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f86100f336600461120c565b610367565b6040519081526020016100dc565b61009f61011436600461126b565b6107fe565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6100f861014e36600461120c565b610952565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b6100c87f000000000000000000000000000000000000000000000000000000000000000081565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610201573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102259190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561027b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029f91906112b4565b6102c45760405162461bcd60e51b81526004016102bb906112d1565b60405180910390fd5b6040516370a0823160e01b8152306004820152610363907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038516906370a0823190602401602060405180830381865afa15801561032e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103529190611308565b6001600160a01b0385169190610dc7565b5050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ec9190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610442573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046691906112b4565b6104825760405162461bcd60e51b81526004016102bb906112d1565b61048c87866107fe565b6104c16001600160a01b0388167f00000000000000000000000000000000000000000000000000000000000000006000610e2a565b6104f56001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610e2a565b606083156105df57604080516003808252608082019092529060208201606080368337019050509050878160008151811061053257610532611337565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000008160018151811061058657610586611337565b60200260200101906001600160a01b031690816001600160a01b03168152505086816002815181106105ba576105ba611337565b60200260200101906001600160a01b031690816001600160a01b031681525050610668565b6040805160028082526060820183529091602083019080368337019050509050878160008151811061061357610613611337565b60200260200101906001600160a01b031690816001600160a01b031681525050868160018151811061064757610647611337565b60200260200101906001600160a01b031690816001600160a01b0316815250505b6040516338ed173960e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906338ed1739906106df908a908a9087907f000000000000000000000000000000000000000000000000000000000000000090429060040161134d565b6000604051808303816000875af11580156106fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072691908101906113be565b90507fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb89898360008151811061075e5761075e611337565b60200260200101518460018651610775919061147c565b8151811061078557610785611337565b60200260200101516040516107c194939291906001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60405180910390a180600182516107d8919061147c565b815181106107e8576107e8611337565b6020026020010151935050505095945050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561085e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108829190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fc91906112b4565b6109185760405162461bcd60e51b81526004016102bb906112d1565b61094d6001600160a01b0384167f00000000000000000000000000000000000000000000000000000000000000003085610f3f565b505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316639a9dbb996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190611297565b90506001600160a01b03811663dee1f0e4336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5191906112b4565b610a6d5760405162461bcd60e51b81526004016102bb906112d1565b610a7787866107fe565b610aac6001600160a01b0388167f00000000000000000000000000000000000000000000000000000000000000006000610e2a565b610ae06001600160a01b0388167f000000000000000000000000000000000000000000000000000000000000000087610e2a565b60608315610bca576040805160038082526080820190925290602082016060803683370190505090508781600081518110610b1d57610b1d611337565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600181518110610b7157610b71611337565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600281518110610ba557610ba5611337565b60200260200101906001600160a01b031690816001600160a01b031681525050610c53565b60408051600280825260608201835290916020830190803683370190505090508781600081518110610bfe57610bfe611337565b60200260200101906001600160a01b031690816001600160a01b0316815250508681600181518110610c3257610c32611337565b60200260200101906001600160a01b031690816001600160a01b0316815250505b604051634401edf760e11b81526000906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638803dbee90610cca9089908b9087907f000000000000000000000000000000000000000000000000000000000000000090429060040161134d565b6000604051808303816000875af1158015610ce9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d1191908101906113be565b90507fa078c4190abe07940190effc1846be0ccf03ad6007bc9e93f9697d0b460befbb898983600081518110610d4957610d49611337565b60200260200101518460018651610d60919061147c565b81518110610d7057610d70611337565b6020026020010151604051610dac94939291906001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60405180910390a1806000815181106107e8576107e8611337565b6040516001600160a01b03831660248201526044810182905261094d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f7d565b801580610ea45750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa158015610e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea29190611308565b155b610f0f5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084016102bb565b6040516001600160a01b03831660248201526044810182905261094d90849063095ea7b360e01b90606401610df3565b6040516001600160a01b0380851660248301528316604482015260648101829052610f779085906323b872dd60e01b90608401610df3565b50505050565b6000610fd2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661104f9092919063ffffffff16565b80519091501561094d5780806020019051810190610ff091906112b4565b61094d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b606061105e8484600085611068565b90505b9392505050565b6060824710156110c95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102bb565b843b6111175760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b600080866001600160a01b0316858760405161113391906114cd565b60006040518083038185875af1925050503d8060008114611170576040519150601f19603f3d011682016040523d82523d6000602084013e611175565b606091505b5091509150611185828286611190565b979650505050505050565b6060831561119f575081611061565b8251156111af5782518084602001fd5b8160405162461bcd60e51b81526004016102bb91906114e9565b6001600160a01b03811681146111de57600080fd5b50565b6000602082840312156111f357600080fd5b8135611061816111c9565b80151581146111de57600080fd5b600080600080600060a0868803121561122457600080fd5b853561122f816111c9565b9450602086013561123f816111c9565b93506040860135925060608601359150608086013561125d816111fe565b809150509295509295909350565b6000806040838503121561127e57600080fd5b8235611289816111c9565b946020939093013593505050565b6000602082840312156112a957600080fd5b8151611061816111c9565b6000602082840312156112c657600080fd5b8151611061816111fe565b6020808252601c908201527f41434c5f4f4e4c595f474f5645524e414e43455f43414e5f43414c4c00000000604082015260600190565b60006020828403121561131a57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b8181101561139d5784516001600160a01b031683529383019391830191600101611378565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156113d157600080fd5b825167ffffffffffffffff808211156113e957600080fd5b818501915085601f8301126113fd57600080fd5b81518181111561140f5761140f611321565b8060051b604051601f19603f8301168101818110858211171561143457611434611321565b60405291825284820192508381018501918883111561145257600080fd5b938501935b8285101561147057845184529385019392850192611457565b98975050505050505050565b60008282101561149c57634e487b7160e01b600052601160045260246000fd5b500390565b60005b838110156114bc5781810151838201526020016114a4565b83811115610f775750506000910152565b600082516114df8184602087016114a1565b9190910192915050565b60208152600082518060208401526115088160408501602087016114a1565b601f01601f1916919091016040019291505056fea2646970667358221220f8c42588608388182504f58dbb03b207e8711eacf0750495924a17cca890e6e064736f6c634300080a0033",
  "devdoc": {
    "details": "Provide swap services for OpenSkyDaoVault contract. - OpenSkyDaoVault should approve 'amount' of 'token' to this contract first - Receiver of swap is always OpenSkyDaoVault - Only callable by governance",
    "kind": "dev",
    "methods": {
      "rescueTokens(address)": {
        "details": "Emergency rescue for token stuck on this contract, as failsafe mechanism - Funds should never remain in this contract more time than during transactions - Only callable by governance*"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}